# Maintainer: Mitch Tishmack <mitch.tishmack@gmail.com>
pkgname=ghc
# XXX: GHC is tightly coupled with community/cabal-stage0.
# Only update to GHC versions supported by cabal bootstrapping setup.
pkgver=9.4.4
pkgrel=0
# Normal non rc candidate
_urlprefix="$pkgver"
_pkgprefix="$pkgname-$pkgver"
_llvmver=14
pkgdesc="The Glasgow Haskell Compiler"
# Next 5 variables only needed for release candidate testing
#pkgrcver=8.2.2
#pkgrc=rc3
#pkgdate=20171108
#urlprefix="$pkgrcver-$pkgrc"
#pkgprefix="ghc-$pkgver.$pkgdate"
url="https://haskell.org/"
arch="aarch64 x86_64"
# Note ghc's license is basically BSD-3. If you'd like to know more visit:
# * https://www.haskell.org/ghc/license
# * https://ghc.haskell.org/trac/ghc/wiki/Licensing
license="BSD-3-Clause"
# Note that ghc is sensitive to the version of llvm used.
#
# Ref: https://ghc.haskell.org/trac/ghc/wiki/Status/GHC-8.0.1
#      https://ghc.haskell.org/trac/ghc/wiki/ImprovedLLVMBackend
#
# Without libffi-dev in $depends linking of software via ghc(1) fails.
depends="gmp-dev libffi-dev perl gcc>=6.2.1 llvm$_llvmver"
# ghc is self-hosted, so we need ghc to build ghc. ghc-bootstrap is provided by
# this aport (see below).
makedepends_build="$pkgname-bootstrap
	autoconf automake binutils libffi-dev ncurses-dev xz coreutils grep py3-sphinx
	alex happy"
makedepends_host="linux-headers musl-dev zlib-dev gmp-dev binutils-dev
	libffi-dev ncurses-dev"
makedepends="$makedepends_build $makedepends_host"
checkdepends="python3 diffutils bash"
# XXX: ghc-bootstrap is a hack to allow this abuild to depend on itself.
# Adding "ghc" to makedepends would not work, because abuild implicitly removes
# $pkgname and $subpackages from the abuild's dependencies.
provides="$pkgname-bootstrap=$pkgver-r$pkgrel"
subpackages="$pkgname-doc $pkgname-dev"
install="$pkgname.post-install"
ldpath="/usr/lib/ghc-$pkgver"
options="!strip ldpath-recursive"  # we strip it manually in build()
source="https://downloads.haskell.org/~ghc/$_urlprefix/$_pkgprefix-src.tar.xz
	https://downloads.haskell.org/~ghc/$_urlprefix/$_pkgprefix-testsuite.tar.xz

	0001-testsuite-skip-tests-that-are-currently-failing-on-A.patch
	0001-testsuite-unset-MAKEFLAGS-when-calling-python.patch
	0001-testsuite-Make-tests-compatible-with-GNU-grep-3.8.patch
	0005-buildpath-abi-stability.patch

	sphinx-6.1.3.patch
	"

# Adjust path for LLVM-14.
export PATH="$PATH:/usr/lib/llvm14/bin"

case "$CARCH" in
aarch64)
	# 116 more failures
	options="$options !check"
	;;
esac

prepare() {
	default_prepare

	cp mk/build.mk.sample mk/build.mk

	cat >> mk/build.mk <<-EOF
		BuildFlavour         = perf-llvm
	EOF

	if [ "$CBUILD" != "$CTARGET" ]; then
		# cross-build
		cat >> mk/build.mk <<-EOF
			BuildFlavour         = perf-cross
			HADDOCK_DOCS         = NO
			BUILD_SPHINX_HTML    = NO
			BUILD_SPHINX_PS      = NO
			BUILD_SPHINX_PDF     = NO
		EOF
	fi

	# Due to patches to the configure script
	autoreconf -fi
}

build() {
	# NOTE: ghc build system requires host == build, and it ends up
	# compiling the cross-compiler (stage1) and cross-compiling with
	# that the native compiler (stage2)
	./configure \
		--build=$CBUILD \
		--host=$CBUILD \
		--target=$CTARGET \
		--prefix=/usr \
		--with-system-libffi \
		LD=${LD:-ld}

	# Switch llvm-targets from unknown-linux-gnueabihf->alpine-linux
	# so we can match the llvm vendor string alpine uses
	sed -i -e 's/unknown-linux-gnueabihf/alpine-linux/g' llvm-targets
	sed -i -e 's/unknown-linux-gnueabi/alpine-linux/g' llvm-targets
	sed -i -e 's/unknown-linux-gnu/alpine-linux/g' llvm-targets

	make
}

check() {
	make fasttest SKIP_PERF_TESTS=YES THREADS=${JOBS:-$(nproc)}
}

package() {
	local ghclib="usr/lib/ghc-$pkgver"
	local newpath path target

	make DESTDIR="$pkgdir" install

	install -Dm644 "$builddir/LICENSE" \
		"$pkgdir/usr/share/licenses/$pkgname/LICENSE"

	cd "$pkgdir"

	# Fixup install tree if needed.
	if [ -d usr/lib/$CTARGET-ghc-$pkgver ]; then
		# different location
		ghclib="usr/lib/$CTARGET-ghc-$pkgver"

		# Rename binaries and fix links.
		local path; for path in usr/bin/"$CTARGET"-*; do
			newpath="${path//$CTARGET-/}"

			if [ -h "$path" ]; then
				target="$(readlink $path)"
				ln -sf "${target//$CTARGET-/}" "$newpath"
				rm "$path"
			else
				mv "$path" "$newpath"
			fi
		done
	fi

	# Remove triplet prefix from settings -- the intention is
	# that the native compiler will use native gcc/ld on the target.
	sed -i "s|$CTARGET-||g" "$ghclib"/settings

	# Can't do a full strip on archives.
	find . -type f \( -name "*.so" -o -name "*.a" \) \
		-exec ${CROSS_COMPILE}strip --strip-unneeded {} \;
	find $ghclib/bin -type f -exec ${CROSS_COMPILE}strip {} \;
}

# Like debian, we split apart the profiled archives/etc...
# This drastically reduces the install size of the ghc pkg.
dev() {
	pkgdesc="$pkgdesc (development files)"
	depends="$pkgname=$pkgver-r$pkgrel"

	cd "$pkgdir"

	install -dm755 "$subpkgdir"

	amove $(find . \( -type f -o -type l \) \( -name "*.p_*" -o -name "lib*_p.a" \))
}

sha512sums="
6c9df7279a30b546bbd30a330905b3bdec31531e1343aa24bad721792235472857153e7f5d8d79e109ed63a314a1a4a647b66510e91eba4627c6806ae5c1fca2  ghc-9.4.4-src.tar.xz
59366aaca8ff3da73758e7eb4a9f13291b46dbac60c1b9da549c206291f1301e3537daf2c253ffafdae58e2ce149bedd7be9c5335e3abf40c47e50caa5c88cbd  ghc-9.4.4-testsuite.tar.xz
2c3ea9ac194ceeb1984127f0e9a902e18a03aea9999e0eb7b86a70248050958b70ac6cc8a16c4679246ae9534af2c716263ad0e65ba8bb4959f1d4ef29e376e2  0001-testsuite-skip-tests-that-are-currently-failing-on-A.patch
ac2ad793b4d33ea890e236820af4cd10996b47d0f4249c825b31450145cb8195c2be62f2d7942cc3bf564f768dca187379196b251f4b37ed326ed2a0a5f59e8a  0001-testsuite-unset-MAKEFLAGS-when-calling-python.patch
524dec6a4fc2ce45f7a35f089f936fb3020aa8283612de6f0dad34146213df638d654c0943147c77126d54c24f632edc53a0400f1af15bfe0d9d3f20cc4ae869  0001-testsuite-Make-tests-compatible-with-GNU-grep-3.8.patch
b9339a7220bab708eff6233db610f900183cd75b59c4fb479c557b1ef8dd7ccca258da2305218f18ba576c3561d048ce2c07deab3c78c15309e6bb1d1d8342d7  0005-buildpath-abi-stability.patch
d8ac98476902ca2b1835246b812749b1da74953664c7fb564a9e40a2da53785ab7e7aa9ee21f0b7133f6b8621b1410ff49acf3b1bd9a380e590eb17cb6714ad1  printf-warnings.patch
7a79a5e9591b1ddd78fa349526a85cf9fee64db80639dcf1f3d6edef422fd4454222aedf5581e21489a20d748656265a40e7645004e4d5220280f6214c568e64  sphinx-6.1.3.patch
"
