# Maintainer: Antoine Martin (ayakael) <dev@ayakael.net>
# Contributor: Antoine Martin (ayakael) <dev@ayakael.net>

# secfixes:
#   6.0.106-r0:
#     - CVE-2022-30184
#   6.0.108-r0:
#     - CVE-2022-34716

# Variables for dotnet-stage0 build version 6.0
# This APKBUILD is designed to be the same for version 6.0 and up
# except for the variables in this first section

pkgname=dotnet6-stage0
pkgver=6.0.108
pkgrel=1

# stage0 build requires prebuilt artifacts that are, for the most part,
# packaged in a single tar. This tar is built for linux-x64, thus it needs
# to be adapted for current linux-musl-$CARCH platform. Following variables
# set required parameters
_artifacts_ver=0.1.0-6.0.100-bootstrap.29
_artifacts_get="
	microsoft.aspnetcore.app.runtime.linux-x64.6.0.7.nupkg
	microsoft.netcore.app.ref.6.0.7.nupkg
	microsoft.netcore.app.crossgen2.linux-x64.6.0.7.nupkg
	microsoft.netcore.app.host.linux-x64.6.0.7.nupkg
	microsoft.netcore.app.runtime.linux-x64.6.0.7.nupkg
	system.reactive.core.4.1.1.nupkg
	"
_artifacts_exclude='*Intermediate*'

# Tag of tarball generator. This may change from usual due to mistakes from upstream
_installertag=v$pkgver

# Test suite tags
_testtag=ddc8576cc4ffccf6b102eed55125b2596336e684
_turkeytag=71880bd94711519f7b786248a88a827a401207a2

# Tests timeout (in seconds)
_tests_timeout=600
# Test suite disable flags
# following tests can only work after packaging step
_disabled_tests="man-pages distribution-package bash-completion"
# we don't care if not latest release and not installed location
_disabled_tests="$_disabled_tests release-version-sane install-location"
# test broken: no musl release for omnisharp
_disabled_tests="$_disabled_tests omnisharp"
# test broken: permission issue on lxc / pipelines
_disabled_tests="$_disabled_tests createdump-aspnet workload"
# liblttng-ust_sys-sdt.h: no 'NT_STAPSDT' on Alpine's lttng-ust package
# lttng: known issue, see https://github.com/dotnet/runtime/issues/57784
_disabled_tests="$_disabled_tests liblttng-ust_sys-sdt.h lttng"
# {bundled,system}-libunwind: use system version on all but aarch64/armv7, as broken
# see https://github.com/redhat-developer/dotnet-regular-tests/issues/113
[ "$CARCH" = "aarch64" ] && _disabled_tests="$_disabled_tests system-libunwind"
[ "$CARCH" = "armv7" ] && _disabled_tests="$_disabled_tests system-libunwind"
[ "$CARCH" = "x86_64" ] && _disabled_tests="$_disabled_tests bundled-libunwind"
# publish-ready-to-run: broken due to crossgen2 nupkg on musl-arm64 / musl-arm platform being broken
# should be fixed with https://github.com/dotnet/runtime/pull/66814
[ "$CARCH" = "aarch64" ] && _disabled_tests="$_disabled_tests publish-ready-to-run publish-ready-to-run-linux"
[ "$CARCH" = "armv7" ] && _disabled_tests="$_disabled_tests publish-ready-to-run publish-ready-to-run-linux"

# Patches to be used. String before '_' refers to repo to patch
# Look for patch notes within each patch for what they fix / where they come from
# build_* patches applies directly to $builddir
_patches="
	aspnetcore_musl-build-fix.patch
	build_arm-build.patch
	build_musl-build-fix.patch
	check_rid-alpine-generation.patch
	command-line-api_fix-musl-build.patch
	installer_arm-build.patch
	installer_forgotten-MicrosoftAspNetCoreAppRuntimePac.patch
	installer_musl-build-fix.patch
	installer_portable-runtime-id.patch
	installer_reprodicible-tarball.patch
	runtime_detect-armv8.patch
	runtime_fix-musl-123.patch
	runtime_lld-fix.patch
	runtime_non-portable-distrorid-fix-alpine.patch
	runtime_rid-alpine-317.patch
	runtime_x86-64-use-system-libunwind.patch
	sdk_add-zsh-compdef-completion-script.patch
	sdk_portable-runtime-id.patch
	sdk_telemetry-optout.patch
	"

# Custom prepare
default_prepare() {
	return
}

# Following for dotnet-stage0 build version 6.0 and up
_pkgver_macro=${pkgver%.*}
_pkgver_prior=1
_pkgver_name="${_pkgver_macro//[.0]}"
pkgdesc="The .NET Core stage0 bits for dotnet build"
arch="x86_64 aarch64 armv7"
url=https://www.microsoft.com/net/core
license="MIT"
subpackages="
	dotnet$_pkgver_name-stage0-artifacts:artifacts:noarch
	dotnet$_pkgver_name-stage0-bootstrap
	"
_source="
	Private.SourceBuilt.Artifacts.$_artifacts_ver.noextract::https://dotnetcli.azureedge.net/source-built-artifacts/assets/Private.SourceBuilt.Artifacts.$_artifacts_ver.tar.gz
	https://gist.githubusercontent.com/omajid/c04b6025de49d0b7b18ab4a7e789484e/raw/b33c57f6bf9c00bb8633375123d2d3594fe81c26/nappo.py
	source-build-testssuite-$_testtag.tar.gz::https://github.com/redhat-developer/dotnet-regular-tests/archive/$_testtag.tar.gz
	source-build-turkey-$_turkeytag.tar.gz::https://github.com/redhat-developer/dotnet-bunny/archive/$_turkeytag.tar.gz
	source-build-tarball-$pkgver.tar.gz::https://tarball
	"
checkdepends="
	babeltrace
	binutils
	coreutils
	file
	gawk
	jq
	lttng-tools
	npm
	procps
	sed
	strace
	util-linux-misc
	which
	"
makedepends="
	bash
	clang
	cmake
	findutils
	git
	grep
	icu-data-full
	icu-dev
	inetutils-syslogd
	krb5-dev
	libgit2-dev
	libintl
	libunwind-dev
	libxml2-dev
	libxml2-utils
	linux-headers
	lld-dev
	lldb-dev
	llvm-dev
	lttng-ust-dev
	nodejs
	openssl-dev
	pigz
	tar
	zlib-dev
	"
builddir="$srcdir"/source-build-tarball-$pkgver
_checkdir="$srcdir/dotnet-bunny-${_turkeytag/v}"
_testdir="$srcdir"/dotnet-regular-tests-$_testtag
_cli_root="$srcdir"/bootstrap
_artifactsdir="$_cli_root"/artifacts
_libdir="/usr/lib"

# custom function that converts Alpine arch syntax to dotnet arch syntax
_get_arch() {
	case $1 in
		x86_64) local arch=x64;;
		aarch64) local arch=arm64;;
		armv7|armhf) local arch=arm;;
	esac
	echo $arch
}
_dotnet_arch=$(_get_arch $CARCH)

# custom source updater function for all dotnet versions
#
# Prebuilt artifacts only provides linux-x64 nukgs. As Alpine uses linux-musl,
# the below scripts updates source to fetch the musl version of those packages,
# allowing packaging of the correct architecture. Thus, everytime Artifacts
# is updated, or new architectures are added, this function needs to be
# executed using 'abuild _update_source'
_update_source() {
	deps
	[ -z "$source" ] \
		&& msg "Removing source from APKBUILD"
	sed -E -i \
		-e '/^source=".*"$/d' \
		-e '/^source="/,/"$/d' \
		\
		-e "/^source='.*'\$/d" \
		-e "/^source='/,/'\$/d" \
		APKBUILD

	source="$_source"
	fetch
	local nuget_source='$_source $_patches'
	msg "Updating source"
	local nappo_exclude="$_artifacts_exclude"
	# shellcheck disable=SC3045
	local nappo_exclude="$(printf '--exclude %s ' $nappo_exclude)"
	local nappo_get=$(tar --list -f "$srcdir"/Private.SourceBuilt.Artifacts.*.noextract --wildcards '*.linux-x64.*' $nappo_exclude)
	local nappo_get="$_artifacts_get $nappo_get"
	for package in $nappo_get; do
		for _arch in $arch; do
			local filename=${package##*/} # Extracts just filename
			local suffix=${filename##*[0-9]} # Extracts what's after version number
			local nupkg=${filename/$suffix} # Extracts nupkg name with version
			[ -z "${filename##*servicing*}" ] && local nupkg=${filename%%-servicing*}
			local name=${nupkg%*.*.*.*} # Extracts name without version
			case $name in
				*win32*|*x64*|*arm64*) ;;
				''|*[0-9]*) name=${name%*.*.*};;
			esac
			local version=${nupkg/$name.} # Extracts version out of nupkg using name
			local name=${name/linux-x64/linux-musl-"$(_get_arch $_arch)"} # Converts to current arch
			[ -z "${filename##*servicing*}" ] && unset version
			echo "Getting $name [${version:-latest}] (replaces $package)"
			local nappo_out="$(python3 "$srcdir"/nappo.py download --verbose $name ${version:-})"
			local nupkg="${nappo_out#*.nupkg}"
			local uri=${nappo_out/$nupkg}
			local nupkg=$(echo $nupkg | tr -d '\n')
			[ -f "$nupkg" ] && mv $nupkg "$SRCDEST"/.
			local nuget_source="$nuget_source $uri"
			[ -z "${name##*linux*}" ] || break
		done
	done
	for _arch in $arch; do
		local nuget_source="$nuget_source dotnet-sdk-$pkgver-linux-musl-$(_get_arch $_arch).noextract::https://dotnetcli.azureedge.net/dotnet/Sdk/$pkgver/dotnet-sdk-$pkgver-linux-musl-$(_get_arch $_arch).tar.gz"
	done
	local nuget_source="$(printf '%s\n' $nuget_source)"
	printf 'source="\n%s\n"\n' "$nuget_source" >>"$APKBUILD"
	undeps
}

# Custom patch logics
_patch() {
	local i failed=
	if ! have_patches; then
		return 0
	fi
	if [ ! -d "$builddir" ]; then
		error "Is \$builddir set correctly?"
		return 1
	fi

	msg "Deploying patches"
	for i in $source; do
		case ${i%::*} in
			*.patch)
				local package=${i%%_*}

				# checks if patch is arch specific
				unset arch_spec
				for j in ${arch/_/-}; do [ -z "${i##*"$j"*}" ] && local arch_spec=true; done
				# if arch specific, checks if patch is applicable to this exact arch
				if [ -n "${i##*"${CARCH/_/-}"*}" ] && [ "$arch_spec" ]; then continue; fi

				msg "Applying $i to $package"
				cd "$builddir"
				case $package in
					check*)cd "$_testdir" || { echo "$_testdir does not exist"; failed=$failed $i; continue; };;
					build*)cd "$builddir";;
					*) cd src/$package || { echo "$package does not exist for patch"; failed=$failed $i; continue; };;
				esac
				patch -Np1 -i "$srcdir/$(filename_from_uri $i)" || failed="$failed $i"
				cd "$builddir"
			;;
		esac
	done

	if [ -z "$failed" ]; then
		return 0
	fi
	error "The following patches failed to apply:"
	for i in $failed; do
		printf "  %s\n" "$i"
	done
}

# dotnet relies on itself when building, we thus need a bootstrap runtime
# that is copied to write-capable folder
_prepare_bootstrap() {
	msg "Settings up bootstrap"

	# creates _artifactsdir and _cli_root at same time
	mkdir -p "$_artifactsdir"

	# extract bootstrap
	tar --use-compress-program="pigz" \
		-xf "$srcdir"/dotnet-sdk-$_pkgver_macro*$_dotnet_arch.noextract \
		-C "$_cli_root" \
		--no-same-owner

	# extract artifacts
	tar --use-compress-program="pigz" \
		-xf "$srcdir"/Private.SourceBuilt.Artifacts.*.noextract -C "$_artifactsdir" \
		--no-same-owner \
		--exclude '*x64*' \
		--exclude '*Intermediate*'

	# install pulled nupkgs
	install -m 644 "$srcdir"/*.nupkg "$_artifactsdir"/.

	# Corrupt libcoreclrtraceptprovider.so when lttng <=2.13.0
	# is detected as tracing is broken on dotnet platform
	# due to ABI changes
	# See https://github.com/dotnet/runtime/issues/57784.
	if [ -f "/usr/lib/liblttng-ust.so.1 " ]; then
		rm "$_cli_root"/shared/Microsoft.NETCore.App/*/libcoreclrtraceptprovider.so
	fi
}

# Build doesn't set all the right executable bits for the right file types
_fix_executable() {
	# add executable bit
	find "$1" -type f \( \
		-name 'apphost' -o \
		-name 'singlefilehost' -o \
		-name 'lib*so' \
			\) \
		-exec chmod +x '{}' \;

	# remove executable bit
	find "$1" -type f \( \
		-name '*.a' -o \
		-name '*.dll' -o \
		-name '*.h' -o \
		-name '*.json' -o \
		-name '*.pdb' -o \
		-name '*.props' -o \
		-name '*.pubxml' -o \
		-name '*.targets' -o \
		-name '*.txt' -o \
		-name '*.xml' \
			\) \
		-exec chmod -x '{}' \;
}

# dotnet build is a two step process. The first step involves sourcing the
# source code to various components, and then the build can proceed as a second
# step. To be able to assure integrity of sources and permit caching, we want to
# build a tarball that can be checked with checksum. Following function is
# executed automatically in fetch() if tarball is not in SRCDEST.
_build_tarball() {
	deps

	# fetches everything but tarball
	local org_source=$source
	source=${source/source-build-tarball*\/tarball}
	default_fetch
	source=$org_source

	# preparations
	cd "$srcdir"
	[ -d "installer" ] || { git clone https://github.com/dotnet/installer --branch $_installertag && cd "$srcdir"/installer; } && cd "$srcdir"/installer
	_prepare_bootstrap

	# makes tarball reproducible
	patch -Np1 -i "$startdir"/installer_reprodicible-tarball.patch || true

	# without these exports, build still attempts a download of dotnet sdk
	export _InitializeDotNetCli="$_cli_root"
	export DOTNET_INSTALL_DIR="$_cli_root"
	export DotNetBuildFromSource=true

	# following args activate tarball build
	local args="
		/p:ArcadeBuildTarball=true
		/p:TarballDir=$builddir
		/p:TarballFilePath=$SRCDEST/${builddir##*/}.tar.gz
		"
	./build.sh $args | tee -a "$srcdir"/installer/build.log

	# unsets export so they don't bleed into other steps
	unset _InitializeDotNetCli DOTNET_INSTALL_DIR DotNetBuildFromSource
}

fetch() {
	# Builds tarball if not built
	[ -f "$SRCDEST"/${builddir##*/}.tar.gz ] || _build_tarball

	default_fetch
}

prepare() {
	default_prepare

	_patch
	_prepare_bootstrap

	# makes sure Artifacts archive is not expected, else build fails as it
	# expected a file that tells it what artifacts tarball it should unpack
	# As artifacts in Alpine's build process are provided by a package, and
	# installed in a folder, this is pulled using --with-packages
	[ -d "$builddir"/packages/archive ] && rm -r "$builddir"/packages/archive

	# readjusts OfficialBuildId back to current date. By default this is not
	# necessary. Unfortunately, by default source tarball isn't reproducible
	# installer_reprodicible-tarball.patch makes it so, but at the cost of
	# setting OfficialBuildId of certain volatile packages to a date in 1990.
	# Thus, to adequately prepare tarball we have to reset git-info build ids
	# to current date, as expected.
	for i in "$builddir"/git-info/*; do
		sed -i "s|<OfficialBuildId>19900101.1</OfficialBuildId>|<OfficialBuildId>$(date +"%Y%m%d.1")</OfficialBuildId>|" "$i"
	done
}

build() {
	msg "Building $pkgname-$pkgver"

	# logs args, else the output is forwarded to log files which isn't ideal in a
	# pipeline environment
	local args="
		/v:minimal
		/p:LogVerbosity=minimal
		/p:MinimalConsoleLogOutput=true
		"

	# Build uses a lot of storage space. This cleans-up as we build for pipelines.
	local args="$args /p:CleanWhileBuilding=true"

	# PrebuiltPackagesPath needs to be set despite --with-packages,
	# as build tools has an error
	local args="$args /p:PrebuiltPackagesPath=$_artifactsdir"

	# between releases, /etc/os-release sometimes has a VERSION_ID that is
	# unsupported by dotnet's Rid format. As mitigation, TargetRid is set
	# manually, rather than letting source-build compute it itself
	# shellcheck disable=SC2034
	. /etc/os-release
	[ -n "${VERSION_ID//[^_]}" ] && local args="$args /p:TargetRid=alpine.${VERSION_ID%_*}-$_dotnet_arch"

	# by default, build sources artifacts from tarball in packages/archive
	# SDK from Microsoft. Due to wanting to use self-hosted versions of
	# both of these, they are packaged by stage0 and bootstrap and provided
	# in $_libdir/dotnet/{bootstrap,artifacts}. SDK is then sourced
	# using _prepare_bootstrap function, and then pointed to using
	# --with-sdk arg. Artifacts are sourced using --with-packages. Due to
	# this being a read-only folder, this breaks without build_copy-sbrp.patch
	# which makes build copy SBRP subfolder rather than move it.
	./build.sh \
		--with-sdk "$_cli_root" \
		--with-packages "$_artifactsdir" \
		-- $args
}

check() {
	msg "Unpacking produced dotnet"
	export DOTNET_ROOT="$_checkdir/release"
	if [ ! -d "$DOTNET_ROOT" ]; then
		mkdir -p "$DOTNET_ROOT"
		tar --use-compress-program="pigz" \
			-xf "$builddir"/artifacts/$_dotnet_arch/Release/dotnet-sdk-$_pkgver_macro*.tar.gz \
			-C "$DOTNET_ROOT" \
			--no-same-owner
	fi
	export PATH="$DOTNET_ROOT:$PATH"
	# some files either should or should not have executable bits
	# (done again during packaging - this is for tests)
	_fix_executable "$DOTNET_ROOT"

	msg "Building turkey test suite"
	if [ ! -d "$_checkdir"/turkey ]; then
		cd "$_checkdir"/Turkey
		dotnet publish \
			-f netcoreapp3.1 \
			-c Release \
			-p:VersionPrefix=1 \
			-p:VersionSuffix="$(git rev-parse --short HEAD)" \
			-o "$_checkdir"/turkey
	fi

	msg "Running test suite"
	cd "$_testdir"
	for i in $_disabled_tests; do
		[ -d "$i" ] && sed -i 's|"enabled": true|"enabled": false|' $i/test.json
	done
	dotnet "$_checkdir"/turkey/Turkey.dll -t $_tests_timeout || local ERROR=true
	if [ $ERROR ]; then
		msg "Check error reported, dumping logs"
		for i in *.log; do
			msg "Dumping $i"
			cat "$i"
		done
		return 1
	fi
}

package() {
	# lua-aports / buildrepo doesn't know to always build stage0 first when dealing
	# with virtual packages. Thus, we need to depend on an empty stage0 pkg that
	# dotnetx-build will pull, thus forcing build of stage0 first
	mkdir -p "$pkgdir"
}

bootstrap() {
	# allows stage0 to be pulled by dotnetx-build if first build of dotnetx
	provides="dotnet$_pkgver_name-bootstrap"
	provider_priority=$_pkgver_prior

	install -dm 755 \
		"$subpkgdir"/$_libdir/dotnet/bootstrap/$pkgver/docs \
		"$subpkgdir"/$_libdir/dotnet/bootstrap/$pkgver/comp \

	# unpack build artifacts to bootstrap subdir for use by future builds
	tar --use-compress-program="pigz" \
		-xf "$builddir"/artifacts/$_dotnet_arch/Release/dotnet-sdk-$_pkgver_macro*.tar.gz \
		-C "$subpkgdir"/$_libdir/dotnet/bootstrap/$pkgver/ \
		--no-same-owner

	# assemble completions
	install -m 755 "$builddir"/src/sdk/scripts/register-completions.bash "$subpkgdir"/$_libdir/dotnet/bootstrap/$pkgver/comp/
	install -m 755 "$builddir"/src/sdk/scripts/register-completions.zsh "$subpkgdir"/$_libdir/dotnet/bootstrap/$pkgver/comp/

	# assemble docs
	find "$builddir" -iname 'dotnet*.1' -type f -exec cp '{}' "$subpkgdir"/$_libdir/dotnet/bootstrap/$pkgver/docs/ \;

	# some files either should or should not have executable bits
	_fix_executable "$subpkgdir"

	# See https://github.com/dotnet/source-build/issues/2579
	find "$subpkgdir" -type f -name 'testhost.x86' -delete
	find "$subpkgdir" -type f -name 'vstest.console' -delete
}

# build relies on a plethora of nupkgs which are provided by this Artifacts file.
# stage0 sources these from Microsoft, which then allows bootstrap to build
# locally hosted versions. The following unpacks built tarball into directory
# for use by future builds.
artifacts() {
	pkgdesc="Internal package for building .NET $_pkgver_macro Software Development Kit"
	# hack to allow artifacts to pull itself
	provides="dotnet$_pkgver_name-bootstrap-artifacts"
	provider_priority=$_pkgver_prior

	# directory creation
	install -dm 755 \
		"$subpkgdir"/$_libdir/dotnet/artifacts/$pkgver \
		"$subpkgdir"/usr/share/licenses

	# extract artifacts to artifacts dir for use by future dotnet builds
	tar --use-compress-program="pigz" \
		-xf "$builddir"/artifacts/$_dotnet_arch/Release/Private.SourceBuilt.Artifacts.*.tar.gz \
		-C "$subpkgdir"/$_libdir/dotnet/artifacts/$pkgver/ \
		--no-same-owner \
		--exclude '*Intermediate*'
}

source="
$_source
$_patches
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.AspNetCore.App.Runtime.linux-musl-x64/6.0.7/microsoft.aspnetcore.app.runtime.linux-musl-x64.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.AspNetCore.App.Runtime.linux-musl-arm64/6.0.7/microsoft.aspnetcore.app.runtime.linux-musl-arm64.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.AspNetCore.App.Runtime.linux-musl-arm/6.0.7/microsoft.aspnetcore.app.runtime.linux-musl-arm.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Ref/6.0.7/microsoft.netcore.app.ref.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Crossgen2.linux-musl-x64/6.0.7/microsoft.netcore.app.crossgen2.linux-musl-x64.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Crossgen2.linux-musl-arm64/6.0.7/microsoft.netcore.app.crossgen2.linux-musl-arm64.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Crossgen2.linux-musl-arm/6.0.7/microsoft.netcore.app.crossgen2.linux-musl-arm.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Host.linux-musl-x64/6.0.7/microsoft.netcore.app.host.linux-musl-x64.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Host.linux-musl-arm64/6.0.7/microsoft.netcore.app.host.linux-musl-arm64.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Host.linux-musl-arm/6.0.7/microsoft.netcore.app.host.linux-musl-arm.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Runtime.linux-musl-x64/6.0.7/microsoft.netcore.app.runtime.linux-musl-x64.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Runtime.linux-musl-arm64/6.0.7/microsoft.netcore.app.runtime.linux-musl-arm64.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Runtime.linux-musl-arm/6.0.7/microsoft.netcore.app.runtime.linux-musl-arm.6.0.7.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//System.Reactive.Core/4.1.1/system.reactive.core.4.1.1.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.AspNetCore.App.Runtime.linux-musl-x64/6.0.0/microsoft.aspnetcore.app.runtime.linux-musl-x64.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.AspNetCore.App.Runtime.linux-musl-arm64/6.0.0/microsoft.aspnetcore.app.runtime.linux-musl-arm64.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.AspNetCore.App.Runtime.linux-musl-arm/6.0.0/microsoft.aspnetcore.app.runtime.linux-musl-arm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Crossgen2.linux-musl-x64/6.0.0/microsoft.netcore.app.crossgen2.linux-musl-x64.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Crossgen2.linux-musl-arm64/6.0.0/microsoft.netcore.app.crossgen2.linux-musl-arm64.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Crossgen2.linux-musl-arm/6.0.0/microsoft.netcore.app.crossgen2.linux-musl-arm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Host.linux-musl-x64/6.0.0/microsoft.netcore.app.host.linux-musl-x64.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Host.linux-musl-arm64/6.0.0/microsoft.netcore.app.host.linux-musl-arm64.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Host.linux-musl-arm/6.0.0/microsoft.netcore.app.host.linux-musl-arm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Runtime.linux-musl-x64/6.0.0/microsoft.netcore.app.runtime.linux-musl-x64.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Runtime.linux-musl-arm64/6.0.0/microsoft.netcore.app.runtime.linux-musl-arm64.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//Microsoft.NETCore.App.Runtime.linux-musl-arm/6.0.0/microsoft.netcore.app.runtime.linux-musl-arm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-x64.Microsoft.NETCore.DotNetAppHost/6.0.0/runtime.linux-musl-x64.microsoft.netcore.dotnetapphost.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm64.Microsoft.NETCore.DotNetAppHost/6.0.0/runtime.linux-musl-arm64.microsoft.netcore.dotnetapphost.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm.Microsoft.NETCore.DotNetAppHost/6.0.0/runtime.linux-musl-arm.microsoft.netcore.dotnetapphost.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-x64.Microsoft.NETCore.DotNetHost/6.0.0/runtime.linux-musl-x64.microsoft.netcore.dotnethost.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm64.Microsoft.NETCore.DotNetHost/6.0.0/runtime.linux-musl-arm64.microsoft.netcore.dotnethost.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm.Microsoft.NETCore.DotNetHost/6.0.0/runtime.linux-musl-arm.microsoft.netcore.dotnethost.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-x64.Microsoft.NETCore.DotNetHostPolicy/6.0.0/runtime.linux-musl-x64.microsoft.netcore.dotnethostpolicy.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm64.Microsoft.NETCore.DotNetHostPolicy/6.0.0/runtime.linux-musl-arm64.microsoft.netcore.dotnethostpolicy.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm.Microsoft.NETCore.DotNetHostPolicy/6.0.0/runtime.linux-musl-arm.microsoft.netcore.dotnethostpolicy.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-x64.Microsoft.NETCore.DotNetHostResolver/6.0.0/runtime.linux-musl-x64.microsoft.netcore.dotnethostresolver.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm64.Microsoft.NETCore.DotNetHostResolver/6.0.0/runtime.linux-musl-arm64.microsoft.netcore.dotnethostresolver.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm.Microsoft.NETCore.DotNetHostResolver/6.0.0/runtime.linux-musl-arm.microsoft.netcore.dotnethostresolver.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-x64.Microsoft.NETCore.ILAsm/6.0.0/runtime.linux-musl-x64.microsoft.netcore.ilasm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm64.Microsoft.NETCore.ILAsm/6.0.0/runtime.linux-musl-arm64.microsoft.netcore.ilasm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm.Microsoft.NETCore.ILAsm/6.0.0/runtime.linux-musl-arm.microsoft.netcore.ilasm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-x64.Microsoft.NETCore.ILDAsm/6.0.0/runtime.linux-musl-x64.microsoft.netcore.ildasm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm64.Microsoft.NETCore.ILDAsm/6.0.0/runtime.linux-musl-arm64.microsoft.netcore.ildasm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm.Microsoft.NETCore.ILDAsm/6.0.0/runtime.linux-musl-arm.microsoft.netcore.ildasm.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-x64.Microsoft.NETCore.TestHost/6.0.0/runtime.linux-musl-x64.microsoft.netcore.testhost.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm64.Microsoft.NETCore.TestHost/6.0.0/runtime.linux-musl-arm64.microsoft.netcore.testhost.6.0.0.nupkg
https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2//runtime.linux-musl-arm.Microsoft.NETCore.TestHost/6.0.0/runtime.linux-musl-arm.microsoft.netcore.testhost.6.0.0.nupkg
dotnet-sdk-6.0.108-linux-musl-x64.noextract::https://dotnetcli.azureedge.net/dotnet/Sdk/6.0.108/dotnet-sdk-6.0.108-linux-musl-x64.tar.gz
dotnet-sdk-6.0.108-linux-musl-arm64.noextract::https://dotnetcli.azureedge.net/dotnet/Sdk/6.0.108/dotnet-sdk-6.0.108-linux-musl-arm64.tar.gz
dotnet-sdk-6.0.108-linux-musl-arm.noextract::https://dotnetcli.azureedge.net/dotnet/Sdk/6.0.108/dotnet-sdk-6.0.108-linux-musl-arm.tar.gz
"
sha512sums="
db502b7fe368d45093c8f3747a34df2b51fc5bcba7602248afb4352a445228f82b19cb3019fe6e20f5246b1b0b4ab6e3f5acea56a769a1a5815d153d24178207  Private.SourceBuilt.Artifacts.0.1.0-6.0.100-bootstrap.29.noextract
90b3ec14fd02cbef8af2086c26ef2f4f23c4c5ce83dac39cacbb36e506ea9914aae6c3b3580af2e71141b8f0435b4910f60970333011b4ddd594839f5fd7ec8e  nappo.py
fff94ca2b01ab360f0ef7d8b5408e49d867733f0008b8b70ebcc8eaaa8e832001510275f075848d24f9f71eb968daf57e30fe24f1ea9d0a38405936f9a2caf26  source-build-testssuite-ddc8576cc4ffccf6b102eed55125b2596336e684.tar.gz
fc281df5fcf0d31dc9ff7f5b0e870960cfbe3c4fa0f6a6bb50b22c4ee18d2c608c827205bc79bd7f686d77ac917582fc26f68432cdd86c4a33b910c0c7416d09  source-build-turkey-71880bd94711519f7b786248a88a827a401207a2.tar.gz
d512ff34c630632c35a58367e5a3375a1ab92ae13874e47e1591660afbfae6a537818fa0be30a4bd27ca7a9d403d05ec732103a8aa9f1dff56ad4be5bcd3058d  source-build-tarball-6.0.108.tar.gz
a2b21c38ed739f9bd18b39a28ef21b940ae32beeb2c8f99575289111e5ecaae40e017a500b3b452ef5df7c7e12dff2f8385acada92ca7507d1ed351c6aa9e311  aspnetcore_musl-build-fix.patch
6e9663f466007fc5fa7010e6859f054b6a4e59affa7aae7fd4d9ab4ba8410d4855b680f58f938ad21d0b3d2a7c7b097c7e9494a4dde2c43478ddddbf37539545  build_arm-build.patch
d25690181c9a19d78d1bd757f4add966cf07457c955546b2f1eafcc37a0a5856f04f87e5997f2300f40013237675d2bf4605caab01ad04a90a526cb38d8fc55a  build_musl-build-fix.patch
941b430b55e323f723bbc5160447f060f40d18ce32e5803ab7dda16bfc60a0f5ec1dccd246e68475d7115ee265a9433824d8a5d997c302531311194a90deeca9  check_rid-alpine-generation.patch
ce36d0233d33cdc96888a64ab83a4099f877413269bcb5602704cedfb6aa89bf6d86157545f6f6243c226b2d714acf66a2bcfb65576afd0c6cda345b76bb5c07  command-line-api_fix-musl-build.patch
9b22bbfcb93c402c14f389d8b23a7d612cca1153fcb76df2f85dd3ba7df2583b092c77534b145eb3d4f5d6e4f3a90355ed45a0b998df23b58639cca0d6c3704f  installer_arm-build.patch
385599c3b35cf34c7cc008ce1e28ab724f51567d759cbd04d64bd9977a139fa9c1d97e4038fc1249b3fca04e0abb99b7abfdde57d1ae4d83742ca76e6b7c40e0  installer_forgotten-MicrosoftAspNetCoreAppRuntimePac.patch
a1e89c860bd6526293038746ed9a963e139b3f199931244b8a3d27e31c9eacba7484523e4151a1a0d7d3137edd271d907954b116619426f5db48361053740e27  installer_musl-build-fix.patch
e14c5861c389c7e1d9a7ec96446be96335723bde403b685b16028a3f87ff6f6614400c876432d7302d3e2b4cd38e8d24979597c8ba909c0ad1d7b6cf2b4c3bfc  installer_portable-runtime-id.patch
49893f1824f3626885bb248fb6a279b6ac455988747028af4a0da63a7e93d8c50c72313b2e261c9154c07ccd11e8bd9c730fd41f8f1897d6a8cf785ba0502c31  installer_reprodicible-tarball.patch
2e79e27b201a3e4423d63666b3dd575d0cb5ddbe258af24d9a2d0f9eb4cc8d177070249cfd08536fa7c3c6debdf939239a7e2c1aadd692d3e903bbb168f241b5  runtime_detect-armv8.patch
aef649d2480d71ce68b030c0d67c2bfd965349a7ab52dbdca7c954edadb308ee6fbebf357113292d1323bfa9b2f8f01fe28d3904b2ebcc7a555742135bfdc726  runtime_fix-musl-123.patch
dda6b463af8e0c8342b9c0d1a584f6d6410fb48df9fb0ef3c07d5ee7eb4abf2a29a01bf7a39fc70c2f5986c0b24c7bfe602cbfbeb1157cb0e0fb0eaa7fb03d1c  runtime_lld-fix.patch
27d47e33fcef6024e05d07e68972f619ff81a211ce9d0d296816b8ed602c61bf57e6ffcaf885a272adc56f1618f8583420a0013101a74538e490113551929c29  runtime_non-portable-distrorid-fix-alpine.patch
1fb414e925a516577240425739242af29eb22507c61c3fc9f7f8eb1f8c34650b00251148f6629704183959a6415bafcfc7442583ad7b1182c1c7c5b8bfd92b6a  runtime_rid-alpine-317.patch
e8fba8748c600696a529dd9b861b2e4bffed9f6a56c1e6ec58c1444b567b92a00e6c310f835eb7915db5f924409782d6ec3d7ae98082bde22401ce7836ee7acb  runtime_x86-64-use-system-libunwind.patch
55afa9c74be6f5a87f1ff5aa44caad094cf620eb4388f6407218acf3d58a878f5565a0e875e95c3dbe0efca1879c120ee4b8076c521bfc9d6069a652c4a4fdd8  sdk_add-zsh-compdef-completion-script.patch
532534ed88fda70b5088b655af00a7218c72f99a65b35194ebcd960b354b24f043c4b63e72b915aaf69ba847f7befa7d650495a0741d7526accb58b425f74a26  sdk_portable-runtime-id.patch
2d651813c6a46e885636fe141d90a33c92d0fa450611cadd944b45ec6929a169e49a6cba18afdd708e3359d5ee204f1c1f6e3bfce2ba9d1bdb083edf78d0337e  sdk_telemetry-optout.patch
f788c5846cc955333138fe65dbfa310fd646ef9ea32fd3f0c593399ce8e69e41f6290834e146ce4205d36c2d19f325d188c3171218806d0e89c60ec76602af30  microsoft.aspnetcore.app.runtime.linux-musl-x64.6.0.7.nupkg
e1d31037b3af853bddff16fb26da8017b719c40ec7ceb15098a48d9c2daea76a16d83265a65285dcb74ee6c1c4faf55bbe0bb2cdb9db5395a8b77a238e323276  microsoft.aspnetcore.app.runtime.linux-musl-arm64.6.0.7.nupkg
4b2c48ae4e715c3fafcd06d665ee28b72bd19d0379651be7dc04f3b64bbb272ee2be01c6352ca23dbb22fe9949c3984401a6c008c8f60a8043b18d17f636f8da  microsoft.aspnetcore.app.runtime.linux-musl-arm.6.0.7.nupkg
f41a20a0f12b06755e25fecb2a894dda850aefe08f5c6c02505f383a52dea75d39e6d35768f641bd5ace012af6097ba5ceb68ea2a39f21a87dc70bcb6330296d  microsoft.netcore.app.ref.6.0.7.nupkg
2a6ebc08a8a113f18eb4052a6117328ea6b50053ff37e68f2a6cd92257012d89871a3b23a88bac96bc76f744e3c229312f0368162188725eb911079c9e956e86  microsoft.netcore.app.crossgen2.linux-musl-x64.6.0.7.nupkg
5c6df0bd4b12a3c3189c891d4fbcd870a708b82fe2ff4c9d45db3ec77545b63f61736c4cd32169ddc46625ea76b8e7975919f2fdf3236b0318ffe3fc78b0ed51  microsoft.netcore.app.crossgen2.linux-musl-arm64.6.0.7.nupkg
cd50c1a4160d8e759fda8f2eb3d43d5d2acc6d2ba3119c853c3aeacd0ce087e516bd4e06f3100aca8cc56350916b499a04ce7309018966c018b13ad82b070ab4  microsoft.netcore.app.crossgen2.linux-musl-arm.6.0.7.nupkg
bcdb9a6b1f605b40a1fad1be4fd6600d97c4462ae854010172446f241cd7212f2ce50623a3af928ccc76daf4e192c96ccbc4a85954e88974e2188b0d37c63b6d  microsoft.netcore.app.host.linux-musl-x64.6.0.7.nupkg
f5a83494645ba029c1beef2e2f5bcd7f76f3e1449d6e5bb5cf370bf235c71965cd4ca4d9dbf1a178ffd7eca3cf2be8a5964cac004f7fcd47288ea55386854c69  microsoft.netcore.app.host.linux-musl-arm64.6.0.7.nupkg
620bcaedf2801615984065b49420e290d810f7eed3701b426d6371b3c1a00d0651b9562220f651b18429d141cd7212b4eb51738d47256f7859a71719618be21f  microsoft.netcore.app.host.linux-musl-arm.6.0.7.nupkg
bdcef960f7901b3f15e1423e0d78046e850a92bac5ffff4abd35ad9c2563cb7974d1bc31aa2a88cf96b66482437699f30253f14d32937bc7d975efe45fc99296  microsoft.netcore.app.runtime.linux-musl-x64.6.0.7.nupkg
92137237e60191d468114235f00acf2874439ffe19989058aa94dfcedbc5a5acc28e4ab2bb7a057042e26cc0a776e584acefb71b4f37158b22d9f8842d57fd18  microsoft.netcore.app.runtime.linux-musl-arm64.6.0.7.nupkg
fcca1897aebd0642c40dc552796f3f403d08d42b9a43671d2a0c409be517a70a1d39995c449aba466317e1733b172efaee04a61a14ed3ce2b807b764f9c01e1f  microsoft.netcore.app.runtime.linux-musl-arm.6.0.7.nupkg
a24efb7578e2020e17c877ffe00b49f8f476b0845fdc55c16404008a9566d8628a72c2208bd23df745c88592ebe9c922b0cf1bc1f95f834b539bbcc2cbf516c5  system.reactive.core.4.1.1.nupkg
49a30d0de9337e9dc5fd9c7f7f192667a16255cb7abedc2e28151e5dc754115af3df72fee65719714b075cf7eeb2fe16b99ba2705e6705142c467035918eca4c  microsoft.aspnetcore.app.runtime.linux-musl-x64.6.0.0.nupkg
3a350b33155ae1d15092615f4280dc6c7f857257205e7af39198de33409cdb463fc41dbe4dd691e97d01a3f69df2f1733de16ef12386c9d381d0bda7795a11eb  microsoft.aspnetcore.app.runtime.linux-musl-arm64.6.0.0.nupkg
9c0def7d8bde5683b0d4922da5bc030844baa6af1abb5fb4776e7fff0bb2f031494ecfd52df8c8a6a235ed2b5588cc933b4c03dea606fdb34908e99fad86ac60  microsoft.aspnetcore.app.runtime.linux-musl-arm.6.0.0.nupkg
c808fdab7cd2524a078f4b1853635f4e316565738c493f5498f39f38b398cb8656b63098a72e3943b9ebbda25d72c24d32af1f78dcee6dc352f1d452cada0a9e  microsoft.netcore.app.crossgen2.linux-musl-x64.6.0.0.nupkg
ffbeb9e95f687c7b90521a1436427a08dd3b6f3dfcae35345fb85100d42f9e97a57e98d3068fed21e56e0bc310daf6a5975d9515ba1b053147a32debfcc3a4aa  microsoft.netcore.app.crossgen2.linux-musl-arm64.6.0.0.nupkg
4346e950bc11b0f614fd54f5582667a65956b129528130978306fc0c4e7e6f9b24f28c1beb80fe50ad389f1655113de8aca9ff813bf7ac645c14bd92685b1961  microsoft.netcore.app.crossgen2.linux-musl-arm.6.0.0.nupkg
9a505dc87ef79e2ea50f522f6267dbc30ce3255158b88646b66fe13ad5df74d275001ce9e327db81808a2cbf53191f29acb98b0f0ad8adf54fbfcd66efa4a6ac  microsoft.netcore.app.host.linux-musl-x64.6.0.0.nupkg
2a4fd1d410242d9ac582f3bdbe99c526fb005c5ece1f4e206485dd25002d789948f566891b0afbac569d84c655f8208c172e4e4f9e8bb0c66c998988529d930d  microsoft.netcore.app.host.linux-musl-arm64.6.0.0.nupkg
dba46327284c6b83be7c62f296c2f2d513a2c6e44f17744d5f5903752c551ac9494844e0ca1c8b0de9b06668e15683e229dec0a470a4f4250a9998560a0d27d4  microsoft.netcore.app.host.linux-musl-arm.6.0.0.nupkg
4de8b21ba038718812fc9b5e375438d53e85f5fae51cdea04cc7403ae6a3e61738d2d0510f04d069ae7d44c1850c0d1ced20cb6ad01149cce91b4f896c7c6489  microsoft.netcore.app.runtime.linux-musl-x64.6.0.0.nupkg
d3b34662b55ba781384871119be9be6b4f5268265357c4cd3f63ac6308fae260f25a0d73ebebe4a7750aa38e158514ae1137451ff9a5b5b46d56d24fe20fe50e  microsoft.netcore.app.runtime.linux-musl-arm64.6.0.0.nupkg
5dde362cf7e3b5f5a70a197a6ddc3b9209d9ca01824d9cbf43ffdccf13e65dbed874a91425693221e0d261bb7c54fca2b0e448cdb2107370783874f5f54f8653  microsoft.netcore.app.runtime.linux-musl-arm.6.0.0.nupkg
78e38bea2009f1fbbc4ced06a754db8179e56a6c2dcfdc7d62e931f65375d72c146427a3a30992b9f330afe32ca02be8ac9810cc56b2527c093c0b00a876edd0  runtime.linux-musl-x64.microsoft.netcore.dotnetapphost.6.0.0.nupkg
0dc0536b1b38cd448a2817c0ac52b088e8fa861dce1a275f53234619defdff92f594b126cfb671ee3b3dbbd0c3d89aeffc69a48412a8f7c74cea6617dd370881  runtime.linux-musl-arm64.microsoft.netcore.dotnetapphost.6.0.0.nupkg
a2f6c54486431c0f5d903c0c30060a27af52a69fb17198d75b36dc1da4d98ab36d9676396ff51d07cf0d54e4a7aec968605d88d8d510dd6d480c9960abda7450  runtime.linux-musl-arm.microsoft.netcore.dotnetapphost.6.0.0.nupkg
4740e2bbb5f295f4aed083210ab06af59c7dac82eeffbad8d61319a0aab76b639bff50543a5f2403afcc52b0d6b60f9c0d20a641107735e6827764fae535f21b  runtime.linux-musl-x64.microsoft.netcore.dotnethost.6.0.0.nupkg
c0f63c5a8e59b3fc2dc77a2593a723f8758ddffc42874307615d33c748c18827e5738f5c04550336f2c4688790acb6d4e2a3a1f468df21cb762900f344916bc4  runtime.linux-musl-arm64.microsoft.netcore.dotnethost.6.0.0.nupkg
61d44c1e1047a08337b6d82f657fd8c2066ee6421cdf2cc163b73075b7f7bf0bd61b8840e3f6c20b6cc78579150576388fcc5ec7013376fbbc851e37b4a8a788  runtime.linux-musl-arm.microsoft.netcore.dotnethost.6.0.0.nupkg
a6960818d9550a5f8c5f5e9e76cb56600a77fe5038ab94a17e02d0472f31f836f6f945172708f214173df68c5ae23a807b1d674a6e85a680074a5797ad015474  runtime.linux-musl-x64.microsoft.netcore.dotnethostpolicy.6.0.0.nupkg
a1de76984b55e0da45d1bdd757095b3a1ace38352c1dd51aaac80b2449aba8342dd36df7109fe5f6dc2901c941935588bf4725ddd86cb8d85877fb828c035390  runtime.linux-musl-arm64.microsoft.netcore.dotnethostpolicy.6.0.0.nupkg
c1b527d0d77b9652549ae2282761f5e8d770f496bbeda7c33edf1e4aee29147f0be4d42dbc8e066f1592006ad46ce43355ac82dca525950051819b564bb96841  runtime.linux-musl-arm.microsoft.netcore.dotnethostpolicy.6.0.0.nupkg
0b3e126d3ff45f076240825fe03576d48c8fe0b3b5e0177d5d18fea48029d4c71328b4b6ac7020437f43ed408f0a146a3713c29e2e65f3fe2ee7361b81ddf244  runtime.linux-musl-x64.microsoft.netcore.dotnethostresolver.6.0.0.nupkg
0629f6e6c5b85d56cd224201b66f1a61c36e07c9e95ead88a8dfa2135bfba4849da9eecf393b7e96132d9be7ac30a1b28354be5c9fe97f378b93e4aefc303696  runtime.linux-musl-arm64.microsoft.netcore.dotnethostresolver.6.0.0.nupkg
008386a783280e97ca925bb707e267be50877f39eac2c413fd489d23a3f8768854bd668a7bae53a66ff6399bf5b4e95ad548e813505443c81b8d85a08d8a163e  runtime.linux-musl-arm.microsoft.netcore.dotnethostresolver.6.0.0.nupkg
0eb771d7e23607a256f209c958a8025af6a7c1e20948b244f2903941aad5e1c0f130a9285ee29086d6188090e8692f5f129329a88da54d3f0a7e7e5b7e4257ef  runtime.linux-musl-x64.microsoft.netcore.ilasm.6.0.0.nupkg
5ad26a79b5ba3ebdc6932dde50218d2c0669377dcb628debbb448e0dfc5d001d7e07b121f18ecd50b667ab372e10ec0bfe166a6e2103faf2f824995fdad0c355  runtime.linux-musl-arm64.microsoft.netcore.ilasm.6.0.0.nupkg
2a24e56ddf0f3e3ef7cb64523b7c6ebf02b91a73287c342783eb66e43a9bbe0cd23eb4b26f435e6b194bf1a40017e6aae60333ff087b18657672b243e8c8ce76  runtime.linux-musl-arm.microsoft.netcore.ilasm.6.0.0.nupkg
25669b580fe5d0d82316df967c285edbef3047c74c00a74a8feeaf703fd8279bad6f56de8ef244cdb4f021913360f0db2a862fd29c5b8cbef7fec01b12b3600d  runtime.linux-musl-x64.microsoft.netcore.ildasm.6.0.0.nupkg
ad094439c9e730ed076495d1720b79331199520b551df4747c3c2f5d4cff010672456b94ff8e0f80b30721b5ee410c0057a83605d5f49a277cb079475a82fb61  runtime.linux-musl-arm64.microsoft.netcore.ildasm.6.0.0.nupkg
ea25a609a88dd118a3b769fb58486013e238e885826efe8da0bf248fcc1879d7b7961786648e8e022e29e3cb2592f52919bbe75ab613823747ac7891ddb9c779  runtime.linux-musl-arm.microsoft.netcore.ildasm.6.0.0.nupkg
ff6873b3e6a824989725dd9f35044c2910e9bc28bff6da379d658a4bf5b05a5346666e667ce0d2fce0630a8abbbf93644540d63f65c4282b277c8686bcb92784  runtime.linux-musl-x64.microsoft.netcore.testhost.6.0.0.nupkg
5d35049a8151f620290c884d6bb6764a7245ced5ac7f79d394272b037f657560d9ace04a8d4c97ed4398432f9e52f91dfac7d3c6088b1ac76b3840cb0b3c7c96  runtime.linux-musl-arm64.microsoft.netcore.testhost.6.0.0.nupkg
c0cd9c4a359428691e10bc336d3c13ed3e1dddbea670e344d33c05e42c8da2ca91c553685916e6c00258b03e26078661a617883f9468c7ffccb64c12e20d729e  runtime.linux-musl-arm.microsoft.netcore.testhost.6.0.0.nupkg
c9a6712efd48f5213749b7898607475d8efef847f67688cb8fb8f2f864e77316f76ddb0c13c6d5315d7527af06197664c817bcadebb3de891296fdb1c4fd08c8  dotnet-sdk-6.0.108-linux-musl-x64.noextract
38136f1257df79049d90f6dd34dab74ddc3644c6b7cabd1f1cfc58dd23faab0b151484a6304f728b5ef789e70be64632f2eb7c47c8da1ba2961a84bb7613f9f4  dotnet-sdk-6.0.108-linux-musl-arm64.noextract
c3df5c67338a035445d5447801f631baa579dbbf2eb8abd236baa1e4c18dee46cff66ddd1dafe1a29d45f1d329b89f78cac81f03c0edc44aa9426496b6197d86  dotnet-sdk-6.0.108-linux-musl-arm.noextract
"
