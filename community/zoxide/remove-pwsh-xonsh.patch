Remove support and tests for PowerShell and Xonsh (not available on Alpine).

--- a/src/shell.rs
+++ b/src/shell.rs
@@ -30,8 +30,6 @@
 make_template!(Bash, "bash.txt");
 make_template!(Fish, "fish.txt");
 make_template!(Posix, "posix.txt");
-make_template!(PowerShell, "powershell.txt");
-make_template!(Xonsh, "xonsh.txt");
 make_template!(Zsh, "zsh.txt");
 
 #[derive(ArgEnum, Clone, Copy, Debug, PartialEq)]
@@ -137,19 +135,6 @@
     }
 
     #[test]
-    fn test_pwsh() {
-        for opts in opts() {
-            let source = PowerShell(opts).render().unwrap();
-            Command::new("pwsh")
-                .args(&["-c", &source])
-                .assert()
-                .success()
-                .stdout("")
-                .stderr("");
-        }
-    }
-
-    #[test]
     fn test_shellcheck_bash() {
         for opts in opts() {
             let source = Bash(opts).render().unwrap();
@@ -200,19 +185,6 @@
                 .args(&["-d", "-s", "-ln", "posix", "-i", "4", "-ci", "-"])
                 .write_stdin(source.as_bytes())
                 .write_stdin(b"\n".as_ref())
-                .assert()
-                .success()
-                .stdout("")
-                .stderr("");
-        }
-    }
-
-    #[test]
-    fn test_xonsh() {
-        for opts in opts() {
-            let source = Xonsh(opts).render().unwrap();
-            Command::new("xonsh")
-                .args(&["-c", &source])
                 .assert()
                 .success()
                 .stdout("")
--- a/src/cmd/init.rs
+++ b/src/cmd/init.rs
@@ -49,8 +49,6 @@
             Shell::Bash => shell::Bash(opts).render(),
             Shell::Fish => shell::Fish(opts).render(),
             Shell::Posix => shell::Posix(opts).render(),
-            Shell::Powershell => shell::PowerShell(opts).render(),
-            Shell::Xonsh => shell::Xonsh(opts).render(),
             Shell::Zsh => shell::Zsh(opts).render(),
         }
         .context("could not render template")?;
@@ -65,8 +63,6 @@
     Bash,
     Fish,
     Posix,
-    Powershell,
-    Xonsh,
     Zsh,
 }
 
