From 3669424e83ce393e2e0ee3f23b5a255c3a11a192 Mon Sep 17 00:00:00 2001
PatchSource: https://github.com/dotnet/source-build/issues/2780
From: Antoine Martin <dev@ayakael.net>
Date: Wed, 16 Feb 2022 15:59:42 +0000
Subject: [PATCH 1/1] reproducible tarball

By default, tarball is not reprodicible due to a select few of volatile
files. This volatility is associated with .git directories and
OfficialBuildId of a few packages that source it from tarball build
date. This patch allows stripping of git directories to bare minimum and
sources OfficialBuildId with generic date to be modified later for
build.

---
 .../src/Tarball_WriteSourceRepoProperties.cs  |  6 +--
 .../tools/SourceBuildArcadeTarball.targets    |  9 +++--
 .../SourceBuildArcadeTarball_strip-git.sh     | 38 +++++++++++++++++++
 3 files changed, 46 insertions(+), 7 deletions(-)
 create mode 100755 src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball_strip-git.sh

diff --git a/src/installer/src/SourceBuild/Arcade/src/Tarball_WriteSourceRepoProperties.cs b/src/installer/src/SourceBuild/Arcade/src/Tarball_WriteSourceRepoProperties.cs
index b6b2793f3..55d680971 100644
--- a/src/installer/src/SourceBuild/Arcade/src/Tarball_WriteSourceRepoProperties.cs
+++ b/src/installer/src/SourceBuild/Arcade/src/Tarball_WriteSourceRepoProperties.cs
@@ -106,7 +106,7 @@ private static DerivedVersion GetVersionInfo(string repoName, string version, st
                 if (repoName.Contains("nuget"))
                 {
                     // NuGet does this - arbitrary build IDs
-                    return new DerivedVersion { OfficialBuildId = DateTime.Now.ToString("yyyyMMdd.1"), PreReleaseVersionLabel = releaseParts[0] };
+                    return new DerivedVersion { OfficialBuildId = DateTime.Now.ToString("19900101.1"), PreReleaseVersionLabel = releaseParts[0] };
                 }
                 else if (releaseParts.Length == 3)
                 {
@@ -140,7 +140,7 @@ private static DerivedVersion GetVersionInfo(string repoName, string version, st
             {
                 // finalized version number (x.y.z) - probably not our code
                 // Application Insights, Newtonsoft.Json do this
-                return new DerivedVersion { OfficialBuildId = DateTime.Now.ToString("yyyyMMdd.1"), PreReleaseVersionLabel = string.Empty };
+                return new DerivedVersion { OfficialBuildId = DateTime.Now.ToString("19900101.1"), PreReleaseVersionLabel = string.Empty };
             }
 
             throw new FormatException($"Can't derive a build ID from version {version} (commit count {commitCount}, release {string.Join(";", nugetVersion.Release.Split('-', '.'))})");
diff --git a/src/installer/src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball.targets b/src/installer/src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball.targets
index a516a86cf..eb5858ba3 100644
--- a/src/installer/src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball.targets
+++ b/src/installer/src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball.targets
@@ -15,6 +15,7 @@
   <PropertyGroup>
     <ArtifactsDir>$(RepoRoot)artifacts/</ArtifactsDir>
     <TarballDir>$(ArtifactsDir)tarball/</TarballDir>
+    <TarballNameDir>$([MSBuild]::MakeRelative($([System.IO.Path]::GetDirectoryName($(TarballDir))), $(TarballDir)))</TarballNameDir>
     <TarballRootDir>$([MSBuild]::EnsureTrailingSlash('$(TarballDir)'))</TarballRootDir>
     <TarballSourceDir>$(TarballRootDir)src/</TarballSourceDir>
     <TarballGitInfoDir>$(TarballRootDir)git-info/</TarballGitInfoDir>
@@ -42,7 +43,7 @@
     <Error Text="TarballFilePath not specified." Condition=" '$(TarballFilePath)' == '' " />
 
     <MakeDir Directories="$(TarballFileDir)" Condition=" '$(TarballFileDir)' != '' " />
-    <Exec Command="tar --numeric-owner -zcf $(TarballFilePath) -C $(TarballDir) ." />
+    <Exec Command="tar --format=gnu --sort=name --owner=0 --group=0 --numeric-owner --mtime='1990-01-01Z' -cf $(TarballFilePath) -C $(TarballDir)/.. $(TarballNameDir)" />
 
     <Message Text="Tarball '$(TarballFilePath)' was successfully created from '$(TarballDir)'" Importance="High" />
   </Target>
@@ -189,10 +190,10 @@
       Command="git config --file $(TarballRepoSourceDir)/.git/config --add remote.origin.url $(OriginalRepoUri)"
       WorkingDirectory="$(RepoRoot)"/>
 
-    <!-- Remove the git objects folder to free up tarball space -->
+    <!-- Strips git directories / submodules to bare minimum for reproducibility -->
     <Exec
-      Command="rm -rf objects"
-      WorkingDirectory="$(TarballRepoSourceDir).git"
+      Command="$(RepoRoot)/src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball_strip-git.sh $(SourceDir)"
+      WorkingDirectory="$(TarballSourceDir)"
       Condition="$(PreserveTarballGitFolders) != 'true'" />
 
     <Message Text="--> Done Cloning Repo $(SourceBuildRepoName)" Importance="High" />
diff --git a/src/installer/src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball_strip-git.sh b/src/installer/src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball_strip-git.sh
new file mode 100755
index 000000000..63858732f
--- /dev/null
+++ b/src/installer/src/SourceBuild/Arcade/tools/SourceBuildArcadeTarball_strip-git.sh
@@ -0,0 +1,38 @@
+#!/bin/bash
+repodir="$1"
+
+gitdir="$repodir"/.git
+stripdir="$repodir"/.strip
+mkdir "$stripdir"
+
+commit=$(git -C "$repodir" rev-parse HEAD)
+url="$(grep -m 1 url "$gitdir"/config)"
+url=${url#*= }
+
+echo $commit > "$stripdir"/HEAD
+{
+echo "[remote \"origin\"]"
+echo "	url = \"$url\""
+} > "$stripdir"/config
+
+if [ -f "$repodir"/.gitmodules ]; then
+	cat "$repodir"/.gitmodules >> "$stripdir"/config
+
+	for subdir in $(find "$gitdir"/modules  -type f -name 'config'); do
+		subdir=${subdir/\/config}
+		substripdir="${subdir/.git/.strip}"
+		commit=$(git -C "$subdir" rev-parse HEAD)
+		url="$(grep -m 1 url "$subdir"/config)"
+		url=${url#*= }
+
+		mkdir -p "$substripdir"
+		echo $commit > "$substripdir"/HEAD
+		{
+		echo "[remote \"origin\"]"
+		echo "	url = \"$url\""
+		} > "$substripdir"/config
+	done
+fi
+
+rm -fR "$gitdir"
+mv "$stripdir" "$gitdir"

