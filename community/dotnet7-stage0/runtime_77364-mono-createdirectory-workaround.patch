From 98054ea87ce70247bb09ceafd2ad1a0b36d2fef4 Mon Sep 17 00:00:00 2001
Patch-Source: https://github.com/dotnet/runtime/issues/77364
From: Antoine Martin <dev@ayakael.net>
Date: Sat, 1 Oct 2022 09:21:58 -0400
Subject: [PATCH] Mono CreatedDirectory workaround

More stack issues seems to cause problems on dotnet7 after refactoring
of FileSystem.Unix.cs. EAGAIN, usually triggered due to process issues,
is now unexpected. Force it to be expected, and to give out a return as
workaround

---
diff --git a/src/runtime/src/libraries/System.Private.CoreLib/src/System/IO/FileSystem.Unix.cs b/src/runtime/src/libraries/System.Private.CoreLib/src/System/IO/FileSystem.Unix.cs
index f538524471..7327ca7b6c 100644
--- a/src/runtime/src/libraries/System.Private.CoreLib/src/System/IO/FileSystem.Unix.cs
+++ b/src/runtime/src/libraries/System.Private.CoreLib/src/System/IO/FileSystem.Unix.cs
@@ -291,7 +291,7 @@ public static void CreateDirectory(string fullPath, UnixFileMode unixCreateMode)
             }
 
             Interop.ErrorInfo errorInfo = Interop.Sys.GetLastErrorInfo();
-            if (errorInfo.Error == Interop.Error.EEXIST && DirectoryExists(fullPath))
+            if ((errorInfo.Error == Interop.Error.EEXIST && DirectoryExists(fullPath)) || errorInfo.Error == Interop.Error.EAGAIN)
             {
                 return; // Path already exists and it's a directory.
             }
@@ -343,7 +343,7 @@ private static void CreateParentsAndDirectory(string fullPath, UnixFileMode unix
                     // Track this path for later creation.
                     stackDir.Append(mkdirPath.Length);
                 }
-                else if (errorInfo.Error == Interop.Error.EEXIST)
+                else if (errorInfo.Error == Interop.Error.EEXIST || errorInfo.Error == Interop.Error.EAGAIN)
                 {
                     // Parent exists.
                     // If it is not a directory, MkDir will fail when we create a child directory.
@@ -365,7 +366,7 @@ private static void CreateParentsAndDirectory(string fullPath, UnixFileMode unix
                 if (result < 0)
                 {
                     Interop.ErrorInfo errorInfo = Interop.Sys.GetLastErrorInfo();
-                    if (errorInfo.Error == Interop.Error.EEXIST)
+                    if (errorInfo.Error == Interop.Error.EEXIST || errorInfo.Error == Interop.Error.EAGAIN)
                     {
                         // Path was created since we last checked.
                         // Continue, and for the last item, which is fullPath,
