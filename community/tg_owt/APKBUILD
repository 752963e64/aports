# Contributor: Newbyte <newbie13xd@gmail.com>
# Contributor: Nulo <alpine@nulo.in>
# Contributor: psykose <alice@ayaya.dev>
# Maintainer: Nulo <alpine@nulo.in>
pkgname=tg_owt
pkgver=20211225
pkgrel=0
_commit="6708e0d31a73e64fe12f54829bf4060c41b2658e"
_libyuv_commit="6862f18e73191a62b6bc8dda56244e4cae5f192a"
pkgdesc="Telegram Desktop's fork of Google's WebRTC"
url="https://github.com/desktop-app/tg_owt"

# TODO: get to compile in x86. Void Linux has a package.
# x86: contains textrels, s390x: due to alleged issues on Big Endian platforms
# ppc64le: undefined sse2 optimizations
arch="all !x86 !ppc64le !s390x"

license="BSD-3-Clause"

# Sorted according to
# https://github.com/telegramdesktop/tdesktop/wiki/The-Packaged-Building-Mode
# abseil bundled because of linking issues
# https://github.com/desktop-app/tg_owt/pull/55#discussion_r599718405
# openh264 bundled because packaged is in testing
# TODO: usrsctp bundled because I wasn't able to figure out how to make cmake
# detect the packaged one.
# Not specified in the wiki page (see
# https://github.com/desktop-app/tg_owt/pull/55):
# pffft bundled because there's no stable ABI and patched
# rnnoise bundled because "all remaining files are custom"
# libsrtp bundled because tg_owt uses private APIs
# libyuv bundled because there's no stable ABI and has many breaking updates
depends_dev="
	ffmpeg-dev
	glib-dev
	jpeg-dev
	openssl1.1-compat-dev
	opus-dev
	pipewire-dev
	libvpx-dev
	libx11-dev
	libxcomposite-dev
	libxdamage-dev
	libxext-dev
	libxfixes-dev
	libxrender-dev
	libxrandr-dev
	libxtst-dev
	"
makedepends="
	$depends_dev
	cmake
	yasm
	samurai
	"

subpackages="$pkgname-dev"
source="
	$pkgname-$_commit.tar.gz::https://github.com/desktop-app/tg_owt/archive/$_commit.tar.gz
	libyuv-$_libyuv_commit.zip::https://codeload.github.com/catdevnull/libyuv/zip/$_libyuv_commit
	cmake_vpx_fixes.patch
	"
builddir="$srcdir/$pkgname-$_commit"

prepare() {
	default_prepare
	mv ../libyuv-$_libyuv_commit/* src/third_party/libyuv
}

build() {
	# dynamic version has broken linking
	cmake -B build -G Ninja . \
		-DTG_OWT_PACKAGED_BUILD=True \
		-DBUILD_SHARED_LIBS=OFF \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_INSTALL_LIBDIR=lib \
		-DCMAKE_BUILD_TYPE=MinSizeRel

	cmake --build build
}

check() {
	cd build
	CTEST_OUTPUT_ON_FAILURE=TRUE ctest
}

package() {
	DESTDIR="$pkgdir" cmake --install build
}

sha512sums="
d73f84eee53865c73de93904e392500e23abb88cac0c13d10cb300d39fb13491232835710fd7132c85f9cff5c2541fb42df7cb4dca170476d03b5254ee67182c  tg_owt-6708e0d31a73e64fe12f54829bf4060c41b2658e.tar.gz
d9e20cd89f8f4847c3e9a1c8c84e2dca2c508e6bb2aef684d4173cfeff8ee53737674321697832b242bba9bed6815804d3d284e5a432c9fb1766c10c6102fff0  libyuv-6862f18e73191a62b6bc8dda56244e4cae5f192a.zip
5254dc5b540ff2225134951cdaea192dd82cca8d72f74c770f6bd5b6c8525f1fde916b203a5b41488101f30dba6e4276d19d0440ed7704c8e2fde60e0af565d0  cmake_vpx_fixes.patch
"
