Inverted form of https://github.com/PyO3/setuptools-rust/commit/d7cdf449c1130dc6e710ff8a20f7d0d8d11460b2
reverted:
--- b/.github/workflows/ci.yml
+++ a/.github/workflows/ci.yml
@@ -201,8 +201,7 @@
       - uses: actions/checkout@master
       - name: Build wheels
         run: |
+          echo 'curl -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
-          echo 'set -ex
-          curl -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
           source ~/.cargo/env
           rustup target add ${{ matrix.platform.target }}
 
@@ -213,7 +212,7 @@
           python3.9 -m pip install crossenv
           python3.9 -m crossenv "/opt/python/cp39-cp39/bin/python3" --cc $TARGET_CC --cxx $TARGET_CXX --sysroot $TARGET_SYSROOT --env LIBRARY_PATH= --manylinux manylinux1 venv
           . venv/bin/activate
+          build-pip install cffi wheel
-          build-pip install cffi wheel "setuptools>=62.4"
           cross-expose cffi
           pip install wheel
           pip install -e ../../
reverted:
--- b/examples/rust_with_cffi/setup.py
+++ a/examples/rust_with_cffi/setup.py
@@ -1,4 +1,7 @@
 #!/usr/bin/env python
+import platform
+import sys
+
 from setuptools import setup
 from setuptools_rust import RustExtension
 
reverted:
--- b/pyproject.toml
+++ a/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
+requires = ["setuptools>=58.0", "setuptools_scm[toml]>=3.4.3"]
-requires = ["setuptools>=62.4", "setuptools_scm[toml]>=3.4.3"]
 build-backend = "setuptools.build_meta"
 
 [tool.setuptools_scm]
reverted:
--- b/setup.cfg
+++ a/setup.cfg
@@ -18,7 +18,6 @@
     Programming Language :: Python :: 3.7
     Programming Language :: Python :: 3.8
     Programming Language :: Python :: 3.9
-    Programming Language :: Python :: 3.10
     Development Status :: 5 - Production/Stable
     Operating System :: POSIX
     Operating System :: MacOS :: MacOS X
@@ -27,8 +26,8 @@
 [options]
 packages = setuptools_rust
 zip_safe = True
+install_requires = setuptools>=58.0; semantic_version>=2.8.2,<3; typing_extensions>=3.7.4.3
+setup_requires = setuptools>=58.0; setuptools_scm>=6.3.2
-install_requires = setuptools>=62.4; semantic_version>=2.8.2,<3; typing_extensions>=3.7.4.3
-setup_requires = setuptools>=62.4; setuptools_scm>=6.3.2
 python_requires = >=3.7
 
 [options.entry_points]
reverted:
--- b/setuptools_rust/build.py
+++ a/setuptools_rust/build.py
@@ -6,6 +6,7 @@
 import sys
 import sysconfig
 from distutils import log
+from distutils.command.build import build as CommandBuild
 from distutils.errors import (
     CompileError,
     DistutilsExecError,
@@ -15,7 +16,6 @@
 from distutils.sysconfig import get_config_var
 from typing import Dict, List, NamedTuple, Optional, cast
 
-from setuptools.command.build import build as CommandBuild  # type: ignore[import]
 from setuptools.command.build_ext import build_ext as CommandBuildExt
 from setuptools.command.build_ext import get_abi3_suffix
 from typing_extensions import Literal
@@ -72,7 +72,7 @@
         super().finalize_options()
 
         if self.plat_name is None:
+            self.plat_name = cast(
-            self.plat_name = cast(  # type: ignore[no-any-unimported]
                 CommandBuild, self.get_finalized_command("build")
             ).plat_name
             assert isinstance(self.plat_name, str)
reverted:
--- b/setuptools_rust/setuptools_ext.py
+++ a/setuptools_rust/setuptools_ext.py
@@ -1,7 +1,9 @@
 import os
 import subprocess
+import sys
 from distutils import log
 from distutils.command.clean import clean
+from pathlib import Path
 from typing import List, Set, Tuple, Type, cast
 
 from setuptools.command.build_ext import build_ext
