diff --git a/rkward/rbackend/rkrbackend.cpp b/rkward/rbackend/rkrbackend.cpp
index 77ebb40..98139cc 100644
--- a/rkward/rbackend/rkrbackend.cpp
+++ b/rkward/rbackend/rkrbackend.cpp
@@ -945,8 +945,8 @@ SEXP doSubstackCall (SEXP _call, SEXP _args) {
 
 	// For now, for simplicity, assume args are always strings, although possibly nested in lists
 	auto ret = RKRBackend::this_pointer->handleRequestWithSubcommands(call, RKRSupport::SEXPToNestedStrings(_args));
-	if (!ret.warning.isEmpty()) Rf_warning(RKRBackend::fromUtf8(ret.warning));  // print warnings, first, as errors will cause a stop
-	if (!ret.error.isEmpty()) Rf_error(RKRBackend::fromUtf8(ret.error));
+	if (!ret.warning.isEmpty()) Rf_warning("%s", RKRBackend::fromUtf8(ret.warning));  // print warnings, first, as errors will cause a stop
+	if (!ret.error.isEmpty()) Rf_error("%s", RKRBackend::fromUtf8(ret.error));
 
 	return RKRSupport::QVariantToSEXP(ret.ret);
 }
@@ -957,8 +957,8 @@ SEXP doPlainGenericRequest (SEXP call, SEXP synchronous) {
 	R_CheckUserInterrupt ();
 
 	auto ret = RKRBackend::this_pointer->handlePlainGenericRequest(RKRSupport::SEXPToStringList(call), RKRSupport::SEXPToInt(synchronous));
-	if (!ret.warning.isEmpty()) Rf_warning(RKRBackend::fromUtf8(ret.warning));  // print warnings, first, as errors will cause a stop
-	if (!ret.error.isEmpty()) Rf_error(RKRBackend::fromUtf8(ret.error));
+	if (!ret.warning.isEmpty()) Rf_warning("%s", RKRBackend::fromUtf8(ret.warning));  // print warnings, first, as errors will cause a stop
+	if (!ret.error.isEmpty()) Rf_error("%s", RKRBackend::fromUtf8(ret.error));
 
 	return RKRSupport::QVariantToSEXP(ret.ret);
 }
