diff --git a/examples/top_lite_simulator.py b/examples/top_lite_simulator.py
index 4fecaaa..a468cba 100644
--- a/examples/top_lite_simulator.py
+++ b/examples/top_lite_simulator.py
@@ -13,7 +13,7 @@ from rich.table import Table
 if sys.version_info >= (3, 8):
     from typing import Literal
 else:
-    from typing_extensions import Literal
+    from typing import Literal
 
 
 @dataclass
diff --git a/rich/_ratio.py b/rich/_ratio.py
index f7dbe92..aaf8727 100644
--- a/rich/_ratio.py
+++ b/rich/_ratio.py
@@ -6,7 +6,7 @@ from typing import cast, List, Optional, Sequence
 if sys.version_info >= (3, 8):
     from typing import Protocol
 else:
-    from typing_extensions import Protocol  # pragma: no cover
+    from typing import Protocol  # pragma: no cover
 
 
 class Edge(Protocol):
diff --git a/rich/align.py b/rich/align.py
index e8fc306..b4a0293 100644
--- a/rich/align.py
+++ b/rich/align.py
@@ -5,7 +5,7 @@ from typing import TYPE_CHECKING, Iterable, Optional
 if sys.version_info >= (3, 8):
     from typing import Literal
 else:
-    from typing_extensions import Literal  # pragma: no cover
+    from typing import Literal  # pragma: no cover
 
 from .constrain import Constrain
 from .jupyter import JupyterMixin
diff --git a/rich/box.py b/rich/box.py
index c265500..e6824d0 100644
--- a/rich/box.py
+++ b/rich/box.py
@@ -4,7 +4,7 @@ from typing import TYPE_CHECKING, Iterable, List
 if sys.version_info >= (3, 8):
     from typing import Literal
 else:
-    from typing_extensions import Literal  # pragma: no cover
+    from typing import Literal  # pragma: no cover
 
 
 from ._loop import loop_last
diff --git a/rich/console.py b/rich/console.py
index cd6f5e5..86aac15 100644
--- a/rich/console.py
+++ b/rich/console.py
@@ -38,7 +38,7 @@ from rich._null_file import NULL_FILE
 if sys.version_info >= (3, 8):
     from typing import Literal, Protocol, runtime_checkable
 else:
-    from typing_extensions import (
+    from typing import (
         Literal,
         Protocol,
         runtime_checkable,
diff --git a/rich/control.py b/rich/control.py
index a8a9125..31ac946 100644
--- a/rich/control.py
+++ b/rich/control.py
@@ -5,7 +5,7 @@ from typing import TYPE_CHECKING, Callable, Dict, Iterable, List, Union
 if sys.version_info >= (3, 8):
     from typing import Final
 else:
-    from typing_extensions import Final  # pragma: no cover
+    from typing import Final  # pragma: no cover
 
 from .segment import ControlCode, ControlType, Segment
 
diff --git a/rich/emoji.py b/rich/emoji.py
index d5a1062..919f6bf 100644
--- a/rich/emoji.py
+++ b/rich/emoji.py
@@ -10,7 +10,7 @@ from ._emoji_replace import _emoji_replace
 if sys.version_info >= (3, 8):
     from typing import Literal
 else:
-    from typing_extensions import Literal  # pragma: no cover
+    from typing import Literal  # pragma: no cover
 
 
 if TYPE_CHECKING:
diff --git a/rich/live_render.py b/rich/live_render.py
index f6fa7b2..fbe6c08 100644
--- a/rich/live_render.py
+++ b/rich/live_render.py
@@ -4,7 +4,7 @@ from typing import Optional, Tuple
 if sys.version_info >= (3, 8):
     from typing import Literal
 else:
-    from typing_extensions import Literal  # pragma: no cover
+    from typing import Literal  # pragma: no cover
 
 
 from ._loop import loop_last
diff --git a/rich/markdown.py b/rich/markdown.py
index ba20479..1c088f7 100644
--- a/rich/markdown.py
+++ b/rich/markdown.py
@@ -4,7 +4,7 @@ from typing import ClassVar, Dict, Iterable, List, Optional, Type, Union
 
 from markdown_it import MarkdownIt
 from markdown_it.token import Token
-from typing_extensions import get_args
+from typing import get_args
 
 from rich.table import Table
 
diff --git a/rich/progress.py b/rich/progress.py
index 43c47eb..567e087 100644
--- a/rich/progress.py
+++ b/rich/progress.py
@@ -37,7 +37,7 @@ from typing import (
 if sys.version_info >= (3, 8):
     from typing import Literal
 else:
-    from typing_extensions import Literal  # pragma: no cover
+    from typing import Literal  # pragma: no cover
 
 from . import filesize, get_console
 from .console import Console, Group, JustifyMethod, RenderableType
