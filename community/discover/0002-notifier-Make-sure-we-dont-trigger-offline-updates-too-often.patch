From 6257e21c313e21afd80d101d24c78d66621236b1 Mon Sep 17 00:00:00 2001
From: Aleix Pol <aleixpol@kde.org>
Date: Mon, 7 Feb 2022 19:49:01 +0100
Subject: [PATCH] notifier: Make sure we don't trigger offline updates too
 often

(cherry picked from commit d607e0c6f931cc1875af69af2c040aeb758faf34)
---
 kcm/updatessettings.kcfg       |  1 +
 notifier/DiscoverNotifier.h    |  7 ++++++-
 notifier/UnattendedUpdates.cpp | 20 ++++++++++++++++++--
 3 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/kcm/updatessettings.kcfg b/kcm/updatessettings.kcfg
index ca958d247..8f55d1e2a 100644
--- a/kcm/updatessettings.kcfg
+++ b/kcm/updatessettings.kcfg
@@ -14,5 +14,6 @@ SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only OR LicenseRef-KDE-Accepted
         <entry name="UseUnattendedUpdates" type="Bool">
             <default>false</default>
         </entry>
+        <entry name="LastUnattendedTrigger" type="DateTime" />
     </group>
 </kcfg>
diff --git a/notifier/DiscoverNotifier.h b/notifier/DiscoverNotifier.h
index d5de353b6..825d454e9 100644
--- a/notifier/DiscoverNotifier.h
+++ b/notifier/DiscoverNotifier.h
@@ -18,6 +18,7 @@
 class KNotification;
 class QNetworkConfigurationManager;
 class UnattendedUpdates;
+class UpdatesSettings;
 
 class DiscoverNotifier : public QObject
 {
@@ -65,6 +66,10 @@ public:
     {
         return m_isBusy;
     }
+    UpdatesSettings *settings() const
+    {
+        return m_settings;
+    }
 
 public Q_SLOTS:
     void recheckSystemUpdateNeeded();
@@ -95,7 +100,7 @@ private:
     QPointer<KNotification> m_updatesAvailableNotification;
     UnattendedUpdates *m_unattended = nullptr;
     KConfigWatcher::Ptr m_settingsWatcher;
-    class UpdatesSettings *m_settings;
+    UpdatesSettings *m_settings;
 };
 
 #endif // ABSTRACTKDEDMODULE_H
diff --git a/notifier/UnattendedUpdates.cpp b/notifier/UnattendedUpdates.cpp
index 69357676e..1cb436336 100644
--- a/notifier/UnattendedUpdates.cpp
+++ b/notifier/UnattendedUpdates.cpp
@@ -6,6 +6,7 @@
 
 #include "UnattendedUpdates.h"
 #include "DiscoverNotifier.h"
+#include "updatessettings.h"
 #include <KIdleTime>
 #include <QDateTime>
 #include <QDebug>
@@ -28,13 +29,27 @@ UnattendedUpdates::~UnattendedUpdates() noexcept
 
 void UnattendedUpdates::checkNewState()
 {
+    using namespace std::chrono_literals;
     DiscoverNotifier *notifier = static_cast<DiscoverNotifier *>(parent());
+
+    // Only allow offline updating every 3h. It should keep some peace to our users, especially on rolling distros
+    const QDateTime updateableTime = notifier->settings()->lastUnattendedTrigger().addSecs((3h).count());
+    if (updateableTime > QDateTime::currentDateTimeUtc()) {
+        qDebug() << "skipping update, already updated on" << notifier->settings()->lastUnattendedTrigger().toString();
+        return;
+    }
+
+    if (!KIdleTime::instance()->idleTimeouts().isEmpty()) {
+        qDebug() << "already waiting for an idle time";
+        return;
+    }
+
     if (notifier->hasUpdates()) {
         qDebug() << "waiting for an idle moment";
-        // If the system is untouched for 1 hour, trigger the unattened update
-        using namespace std::chrono_literals;
+        // If the system is untouched for 15 minutes, trigger the unattened update
         KIdleTime::instance()->addIdleTimeout(int(std::chrono::milliseconds(15min).count()));
     } else {
+        qDebug() << "nothing to do";
         KIdleTime::instance()->removeAllIdleTimeouts();
     }
 }
@@ -56,6 +71,7 @@ void UnattendedUpdates::triggerUpdate()
         DiscoverNotifier *notifier = static_cast<DiscoverNotifier *>(parent());
         notifier->setBusy(false);
         process->deleteLater();
+        notifier->settings()->setLastUnattendedTrigger(QDateTime::currentDateTimeUtc());
     });
 
     notifier->setBusy(true);
-- 
GitLab

