From c4c33449227d4bb856df9e9bcd6a32b9777afd08 Mon Sep 17 00:00:00 2001
From: Bart Ribbers <bribbers@disroot.org>
Date: Tue, 8 Dec 2020 11:18:13 +0100
Subject: [PATCH 1/2] Migrate installed skills file to XDG Base Directory

Combined with https://github.com/MycroftAI/mycroft-core/pull/2578
~/.mycroft/skills.json is now migrated to follow the XDG Base Directory
specification.

This means it'll be installed to $XDG_DATA_HOME/mycroft/skills.json,
or $HOME/.local/share/mycroft/skills.json if $XDG_DATA_HOME is unset

The file is migrated from the old location if it still exists there
---
 msm/skill_state.py                   | 16 +++++++++++-----
 requirements.txt                     |  1 +
 setup.py                             |  2 +-
 tests/test_mycroft_skills_manager.py |  6 +++---
 4 files changed, 16 insertions(+), 9 deletions(-)

diff --git a/msm/skill_state.py b/msm/skill_state.py
index a013556..ab050b8 100644
--- a/msm/skill_state.py
+++ b/msm/skill_state.py
@@ -1,16 +1,22 @@
 """Functions related to manipulating the skills.json file."""
 import json
+import os
 from logging import getLogger
-from os.path import expanduser, isfile, dirname
+from os.path import isfile, dirname, join
 from os import makedirs
+from xdg import BaseDirectory
 
 LOG = getLogger(__name__)
-SKILL_STATE_PATH = '~/.mycroft/skills.json'
+SKILL_STATE_PATH = join(BaseDirectory.save_data_path('mycroft'), 'skills.json')
 
+# Make sure we migrate the installed skills file from the old non-XDG location
+old_skill_state_path = '~/.mycroft/skills.json'
+if isfile(old_skill_state_path):
+    os.rename(old_skill_state_path, SKILL_STATE_PATH)
 
 def load_device_skill_state() -> dict:
     """Contains info on how skills should be updated"""
-    skills_data_path = expanduser(SKILL_STATE_PATH)
+    skills_data_path = SKILL_STATE_PATH
     device_skill_state = {}
     if isfile(skills_data_path):
         try:
@@ -24,13 +30,13 @@ def load_device_skill_state() -> dict:
 
 def write_device_skill_state(data: dict):
     """Write the device skill state to disk."""
-    dir_path = dirname(expanduser(SKILL_STATE_PATH))
+    dir_path = dirname(SKILL_STATE_PATH)
     try:
         # create folder if it does not exist
         makedirs(dir_path)
     except Exception:
         pass
-    skill_state_path = expanduser(SKILL_STATE_PATH)
+    skill_state_path = SKILL_STATE_PATH
     with open(skill_state_path, 'w') as skill_state_file:
         json.dump(data, skill_state_file, indent=4, separators=(',', ':'))
 
diff --git a/requirements.txt b/requirements.txt
index 4c184b0..3bc9276 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -2,3 +2,4 @@ requests
 GitPython
 fasteners
 lazy
+pyxdg
diff --git a/setup.py b/setup.py
index 397f84d..81fa076 100644
--- a/setup.py
+++ b/setup.py
@@ -30,7 +30,7 @@
     packages=['msm'],
     install_requires=[
         'GitPython', 'fasteners', 'pyyaml', 'pako',
-        'lazy'
+        'lazy', 'pyxdg'
     ],
     python_requires='>=3.5',
     url='https://github.com/MycroftAI/mycroft-skills-manager',
diff --git a/tests/test_mycroft_skills_manager.py b/tests/test_mycroft_skills_manager.py
index 8f00d3c..13501b0 100644
--- a/tests/test_mycroft_skills_manager.py
+++ b/tests/test_mycroft_skills_manager.py
@@ -67,9 +67,9 @@ def _mock_log(self):
         self.log_mock = log_patch.start()
 
     def _mock_skills_json_path(self):
-        expanduser_patch = patch('msm.skill_state.expanduser')
-        self.addCleanup(expanduser_patch.stop)
-        self.skills_json_path_mock = expanduser_patch.start()
+        savedatapath_patch = patch('msm.skill_state.BaseDirectory.save_data_path')
+        self.addCleanup(savedatapath_patch.stop)
+        self.skills_json_path_mock = savedatapath_patch.start()
         self.skills_json_path_mock.return_value = str(
             self.temp_dir.joinpath('skills.json')
         )

From ebf1fad63bb06fd9a4be98676aa41fc041f434cb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=85ke=20Forslund?= <ake.forslund@gmail.com>
Date: Sun, 13 Dec 2020 17:37:27 +0100
Subject: [PATCH 2/2] Make skill_state_path mockable

---
 msm/skill_state.py                   | 23 +++++++++++++++++------
 tests/test_mycroft_skills_manager.py |  5 +++--
 2 files changed, 20 insertions(+), 8 deletions(-)

diff --git a/msm/skill_state.py b/msm/skill_state.py
index ab050b8..459e52b 100644
--- a/msm/skill_state.py
+++ b/msm/skill_state.py
@@ -4,19 +4,30 @@
 from logging import getLogger
 from os.path import isfile, dirname, join
 from os import makedirs
+import os
 from xdg import BaseDirectory
 
 LOG = getLogger(__name__)
-SKILL_STATE_PATH = join(BaseDirectory.save_data_path('mycroft'), 'skills.json')
+
+
+def get_state_path():
+    """Get complete path for skill state file.
+
+    Returns:
+        (str) path to skills.json
+    """
+    return join(BaseDirectory.save_data_path('mycroft'), 'skills.json')
+
 
 # Make sure we migrate the installed skills file from the old non-XDG location
 old_skill_state_path = '~/.mycroft/skills.json'
 if isfile(old_skill_state_path):
-    os.rename(old_skill_state_path, SKILL_STATE_PATH)
+    os.rename(old_skill_state_path, get_state_path())
+
 
 def load_device_skill_state() -> dict:
     """Contains info on how skills should be updated"""
-    skills_data_path = SKILL_STATE_PATH
+    skills_data_path = get_state_path()
     device_skill_state = {}
     if isfile(skills_data_path):
         try:
@@ -30,13 +41,13 @@ def load_device_skill_state() -> dict:
 
 def write_device_skill_state(data: dict):
     """Write the device skill state to disk."""
-    dir_path = dirname(SKILL_STATE_PATH)
+    dir_path = dirname(get_state_path())
     try:
         # create folder if it does not exist
         makedirs(dir_path)
     except Exception:
         pass
-    skill_state_path = SKILL_STATE_PATH
+    skill_state_path = get_state_path()
     with open(skill_state_path, 'w') as skill_state_file:
         json.dump(data, skill_state_file, indent=4, separators=(',', ':'))
 
@@ -53,7 +64,7 @@ def get_skill_state(name, device_skill_state) -> dict:
 
 def initialize_skill_state(name, origin, beta, skill_gid) -> dict:
     """Create a new skill entry
-    
+
     Arguments:
         name: skill name
         origin: the source of the installation
diff --git a/tests/test_mycroft_skills_manager.py b/tests/test_mycroft_skills_manager.py
index 13501b0..6184f29 100644
--- a/tests/test_mycroft_skills_manager.py
+++ b/tests/test_mycroft_skills_manager.py
@@ -67,13 +67,14 @@ def _mock_log(self):
         self.log_mock = log_patch.start()
 
     def _mock_skills_json_path(self):
-        savedatapath_patch = patch('msm.skill_state.BaseDirectory.save_data_path')
-        self.addCleanup(savedatapath_patch.stop)
+        savedatapath_patch = patch('msm.skill_state.get_state_path')
         self.skills_json_path_mock = savedatapath_patch.start()
         self.skills_json_path_mock.return_value = str(
             self.temp_dir.joinpath('skills.json')
         )
 
+        self.addCleanup(savedatapath_patch.stop)
+
     def _mock_skill_entry(self):
         skill_entry_patch = patch(
             'msm.mycroft_skills_manager.SkillEntry.install',
