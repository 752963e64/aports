From 0f1af7489b0c0de4ef7e54e009ba70b51b0b6dc8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Robert=20G=C3=BCnzler?= <r@gnzler.io>
Date: Wed, 21 Sep 2022 14:33:41 +0200
Subject: [PATCH] find go in /usr/bin
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

GOROOT is unset in abuild environment

Signed-off-by: Robert GÃ¼nzler <r@gnzler.io>
---
 net/tlsdial/tlsdial_test.go       | 2 +-
 tstest/integration/integration.go | 2 +-
 version/modinfo_test.go           | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/net/tlsdial/tlsdial_test.go b/net/tlsdial/tlsdial_test.go
index 9bfb5b06..7e4238b3 100644
--- a/net/tlsdial/tlsdial_test.go
+++ b/net/tlsdial/tlsdial_test.go
@@ -43,7 +43,7 @@ func TestFallbackRootWorks(t *testing.T) {
 	crtFile := filepath.Join(d, "tlsdial.test.crt")
 	keyFile := filepath.Join(d, "tlsdial.test.key")
 	caFile := filepath.Join(d, "rootCA.pem")
-	cmd := exec.Command(filepath.Join(runtime.GOROOT(), "bin", "go"),
+	cmd := exec.Command(filepath.Join("/usr", "bin", "go"),
 		"run", "filippo.io/mkcert",
 		"--cert-file="+crtFile,
 		"--key-file="+keyFile,
diff --git a/tstest/integration/integration.go b/tstest/integration/integration.go
index f6dbb3a8..f46a9e55 100644
--- a/tstest/integration/integration.go
+++ b/tstest/integration/integration.go
@@ -130,7 +130,7 @@ func build(outDir string, targets ...string) error {
 }
 
 func findGo() (string, error) {
-	goBin := filepath.Join(runtime.GOROOT(), "bin", "go"+exe())
+	goBin := filepath.Join("/usr", "bin", "go"+exe())
 	if fi, err := os.Stat(goBin); err != nil {
 		if os.IsNotExist(err) {
 			return "", fmt.Errorf("failed to find go at %v", goBin)
diff --git a/version/modinfo_test.go b/version/modinfo_test.go
index 67df3970..b6a8bdd9 100644
--- a/version/modinfo_test.go
+++ b/version/modinfo_test.go
@@ -16,7 +16,7 @@
 func TestFindModuleInfo(t *testing.T) {
 	dir := t.TempDir()
 	name := filepath.Join(dir, "tailscaled-version-test")
-	goTool := filepath.Join(runtime.GOROOT(), "bin", "go"+exe())
+	goTool := filepath.Join("/usr", "bin", "go"+exe())
 	out, err := exec.Command(goTool, "build", "-o", name, "tailscale.com/cmd/tailscaled").CombinedOutput()
 	if err != nil {
 		t.Fatalf("failed to build tailscaled: %v\n%s", err, out)
-- 
2.35.1

