From e71eb01feb4d169719470d0551d5ccd6d616e43b Mon Sep 17 00:00:00 2001
From: Oliver Smith <ollieparanoid@postmarketos.org>
Date: Sun, 2 May 2021 14:38:00 +0200
Subject: [PATCH] [mobile] add option userPasswordNumeric

Related: https://gitlab.com/postmarketOS/postmarketos-ondev/-/issues/46
---
 modules/mobile/Config.cpp    |  1 +
 modules/mobile/Config.h      |  3 +++
 modules/mobile/mobile.conf   |  4 ++++
 modules/mobile/user_pass.qml | 39 +++++++++++++++++++++++++++---------
 4 files changed, 37 insertions(+), 10 deletions(-)

diff --git a/modules/mobile/Config.cpp b/modules/mobile/Config.cpp
index e6078b7..c2683e1 100644
--- a/modules/mobile/Config.cpp
+++ b/modules/mobile/Config.cpp
@@ -25,6 +25,7 @@ Config::setConfigurationMap( const QVariantMap& cfgMap )
     m_userInterface = getString( cfgMap, "userInterface", "(unknown)" );
     m_version = getString( cfgMap, "version", "(unknown)" );
     m_username = getString( cfgMap, "username", "user" );
+    m_userPasswordNumeric = getBool( cfgMap, "userPasswordNumeric", true );
 
     m_builtinVirtualKeyboard = getBool( cfgMap, "builtinVirtualKeyboard", true );
 
diff --git a/modules/mobile/Config.h b/modules/mobile/Config.h
index 5c39c77..5dc2ca4 100644
--- a/modules/mobile/Config.h
+++ b/modules/mobile/Config.h
@@ -23,6 +23,7 @@ class Config : public QObject
     /* default user */
     Q_PROPERTY( QString username READ username CONSTANT FINAL )
     Q_PROPERTY( QString userPassword READ userPassword WRITE setUserPassword NOTIFY userPasswordChanged )
+    Q_PROPERTY( bool userPasswordNumeric READ userPasswordNumeric CONSTANT FINAL )
 
     /* ssh server + credentials */
     Q_PROPERTY( bool featureSshd READ featureSshd CONSTANT FINAL )
@@ -75,6 +76,7 @@ public:
     QString username() const { return m_username; }
     QString userPassword() const { return m_userPassword; }
     void setUserPassword( const QString& userPassword );
+    bool userPasswordNumeric() const { return m_userPasswordNumeric; }
 
     /* ssh server + credetials */
     bool featureSshd() { return m_featureSshd; }
@@ -136,6 +138,7 @@ private:
     /* default user */
     QString m_username;
     QString m_userPassword;
+    bool m_userPasswordNumeric;
 
     /* ssh server + credetials */
     bool m_featureSshd;
diff --git a/modules/mobile/mobile.conf b/modules/mobile/mobile.conf
index 7b9dbd5..59424fb 100644
--- a/modules/mobile/mobile.conf
+++ b/modules/mobile/mobile.conf
@@ -11,6 +11,10 @@
 ## User Interface name (e.g. Plasma Mobile)
 # userInterface: "(unknown)"
 
+## User Interface assumes that the password is numeric (as of writing, this is
+## the case with Plasma Mobile and Phosh)
+# userPasswordNumeric: true
+
 ## OS version
 # version: "(unknown)"
 
diff --git a/modules/mobile/user_pass.qml b/modules/mobile/user_pass.qml
index a6bfba0..366fda3 100644
--- a/modules/mobile/user_pass.qml
+++ b/modules/mobile/user_pass.qml
@@ -12,6 +12,17 @@ import QtQuick.Window 2.3
 import QtQuick.VirtualKeyboard 2.1
 
 Item {
+    property var placeholder: (config.userPasswordNumeric
+                               ? "PIN"
+                               : "Password")
+    property var hints: (config.userPasswordNumeric
+                         ? Qt.ImhDigitsOnly
+                         : Qt.ImhPreferLowercase)
+    property var validateFunc: (config.userPasswordNumeric
+                                ? validatePin
+                                : validatePassword);
+
+
     anchors.left: parent.left
     anchors.top: parent.top
     anchors.right: parent.right
@@ -25,9 +36,17 @@ Item {
         anchors.topMargin: 30
         wrapMode: Text.WordWrap
 
-        text: "Set the numeric password of your user. The lockscreen will" +
-              " ask for this PIN. This is <i>not</i> the PIN of your SIM" +
-              " card. Make sure to remember it."
+        text: (function() {
+            if (config.userPasswordNumeric) {
+                return "Set the numeric password of your user. The" +
+                       " lockscreen will ask for this PIN. This is" +
+                       " <i>not</i> the PIN of your SIM card. Make sure to" +
+                       " remember it.";
+            } else {
+                return "Set the password of your user. The lockscreen will" +
+                      " ask for this password. Make sure to remember it.";
+            }
+        }())
 
         width: 500
     }
@@ -35,13 +54,13 @@ Item {
     TextField {
         id: userPass
         anchors.top: description.bottom
-        placeholderText: qsTr("PIN")
+        placeholderText: qsTr(placeholder)
         echoMode: TextInput.Password
-        onTextChanged: validatePin(userPass, userPassRepeat, errorText)
+        onTextChanged: validateFunc(userPass, userPassRepeat, errorText)
         text: config.userPassword
 
         /* Let the virtual keyboard change to digits only */
-        inputMethodHints: Qt.ImhDigitsOnly
+        inputMethodHints: hints
         onActiveFocusChanged: {
             if(activeFocus) {
                 Qt.inputMethod.update(Qt.ImQueryInput)
@@ -56,10 +75,10 @@ Item {
     TextField {
         id: userPassRepeat
         anchors.top: userPass.bottom
-        placeholderText: qsTr("PIN (repeat)")
-        inputMethodHints: Qt.ImhDigitsOnly
+        placeholderText: qsTr(placeholder + " (repeat)")
+        inputMethodHints: hints
         echoMode: TextInput.Password
-        onTextChanged: validatePin(userPass, userPassRepeat, errorText)
+        onTextChanged: validateFunc(userPass, userPassRepeat, errorText)
         text: config.userPassword
 
         anchors.horizontalCenter: parent.horizontalCenter
@@ -86,7 +105,7 @@ Item {
 
         text: qsTr("Continue")
         onClicked: {
-            if (validatePin(userPass, userPassRepeat, errorText)) {
+            if (validateFunc(userPass, userPassRepeat, errorText)) {
                 config.userPassword = userPass.text;
                 navNext();
             }
-- 
2.26.3

