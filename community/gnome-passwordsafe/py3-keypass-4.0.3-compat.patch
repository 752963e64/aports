Patch-Source: https://gitlab.gnome.org/World/secrets/-/merge_requests/708
From 41a62bc01148ee8b4b2c3801bb0ae28ca332dc42 Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@protonmail.com>
Date: Mon, 4 Jul 2022 19:34:39 +0200
Subject: [PATCH] Update pykeepass to 4.0.3

---
 flatpak/python3-pykeepass.json | 8 ++++----
 gsecrets/safe_element.py       | 8 ++++----
 meson.build                    | 2 +-
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/gsecrets/safe_element.py b/gsecrets/safe_element.py
index cef76f7dc..8f512f18d 100644
--- a/gsecrets/safe_element.py
+++ b/gsecrets/safe_element.py
@@ -393,8 +393,7 @@ class SafeEntry(SafeElement):
         self._url: str = entry.url or ""
         self._username: str = entry.username or ""
 
-        otp_uri = entry.get_custom_property("otp")
-        if otp_uri:
+        if (otp_uri := entry.otp):
             try:
                 self._otp = parse_uri(otp_uri)
             except ValueError as err:
@@ -624,7 +623,8 @@ class SafeEntry(SafeElement):
         if not otp and self._otp:
             # Delete existing
             self._otp = None
-            self._element.delete_custom_property("otp")
+            # NOTE the opt property doesn't accept None.
+            self._element.otp = ""
             self.updated()
         elif self._otp and self._otp.secret != otp:
             # Changing an existing OTP
@@ -636,7 +636,7 @@ class SafeEntry(SafeElement):
             updated = True
 
         if updated:
-            self._element.set_custom_property("otp", self._otp.provisioning_uri())
+            self._element.otp = self._otp.provisioning_uri()
             self.updated()
 
     def otp_interval(self) -> int:
diff --git a/meson.build b/meson.build
index 3469724f7..9c467df79 100644
--- a/meson.build
+++ b/meson.build
@@ -26,7 +26,7 @@ artists = '\n'.join([
                    ])
 
 message('Looking for dependencies')
-# We need pykeepass>=4.0.2 and pyotp>=2.4.0.
+# We need pykeepass>=4.0.3 and pyotp>=2.4.0.
 python_bin = python.find_installation('python3', modules:['pykeepass', 'pyotp'])
 if not python_bin.found()
   error('No valid python3 binary found')
-- 
GitLab

