diff --git a/src/view/src/lib.rs b/src/view/src/lib.rs
index 76afa88..4c33f99 100644
--- a/src/view/src/lib.rs
+++ b/src/view/src/lib.rs
@@ -9,8 +9,7 @@
 	nonstandard_style,
 	rust_2018_compatibility,
 	rust_2018_idioms,
-	unused,
-	warnings
+	unused
 )]
 // rustc's additional allowed by default lints
 #![deny(
@@ -105,14 +104,8 @@ use display::{Display, DisplayColor, Size, Tui};
 
 use self::render_slice::RenderSlice;
 pub use self::{
-	action::ViewAction,
-	line_segment::LineSegment,
-	render_context::RenderContext,
-	sender::Sender as ViewSender,
-	thread::spawn_view_thread,
-	view_data::ViewData,
-	view_data_updater::ViewDataUpdater,
-	view_line::ViewLine,
+	action::ViewAction, line_segment::LineSegment, render_context::RenderContext, sender::Sender as ViewSender,
+	thread::spawn_view_thread, view_data::ViewData, view_data_updater::ViewDataUpdater, view_line::ViewLine,
 };
 
 const TITLE: &str = "Git Interactive Rebase Tool";
@@ -213,14 +206,11 @@ impl<C: Tui> View<C> {
 			if show_scroll_bar {
 				self.display.move_from_end_of_line(1)?;
 				self.display.color(DisplayColor::Normal, true)?;
-				self.display.draw_str(
-					if scroll_indicator_index == index {
-						SCROLLBAR_INDICATOR_CHARACTER
-					}
-					else {
-						" "
-					},
-				)?;
+				self.display.draw_str(if scroll_indicator_index == index {
+					SCROLLBAR_INDICATOR_CHARACTER
+				} else {
+					" "
+				})?;
 			}
 			self.display.color(DisplayColor::Normal, false)?;
 			self.display.set_style(false, false, false)?;
@@ -279,18 +269,15 @@ impl<C: Tui> View<C> {
 				if show_help {
 					self.display
 						.draw_str(format!("{}{}", TITLE_HELP_INDICATOR_LABEL, self.help_indicator_key).as_str())?;
-				}
-				else {
+				} else {
 					let padding = " ".repeat(title_help_indicator_total_length);
 					self.display.draw_str(padding.as_str())?;
 				}
-			}
-			else if (window_width - TITLE.len()) > 0 {
+			} else if (window_width - TITLE.len()) > 0 {
 				let padding = " ".repeat(window_width - TITLE.len());
 				self.display.draw_str(padding.as_str())?;
 			}
-		}
-		else {
+		} else {
 			self.display.draw_str(TITLE_SHORT)?;
 			if (window_width - TITLE_SHORT.len()) > 0 {
 				let padding = " ".repeat(window_width - TITLE_SHORT.len());
