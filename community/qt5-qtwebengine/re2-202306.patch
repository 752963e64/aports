--- a/src/3rdparty/chromium/gpu/command_buffer/service/program_manager.cc
+++ b/src/3rdparty/chromium/gpu/command_buffer/service/program_manager.cc
@@ -620,7 +620,7 @@
       output += hashed_name;
   }
 
-  return output + input.as_string();
+  return output + std::string(input);
 }
 
 void Program::UpdateLogInfo() {
--- a/src/3rdparty/chromium/extensions/browser/api/web_request/form_data_parser.cc
+++ b/src/3rdparty/chromium/extensions/browser/api/web_request/form_data_parser.cc
@@ -421,7 +421,7 @@
 bool FormDataParserUrlEncoded::SetSource(base::StringPiece source) {
   if (source_set_)
     return false;  // We do not allow multiple sources for this parser.
-  source_.set(source.data(), source.size());
+  source_ = re2::StringPiece(source.data(), source.size());
   source_set_ = true;
   source_malformed_ = false;
   return true;
@@ -565,7 +565,7 @@
 bool FormDataParserMultipart::SetSource(base::StringPiece source) {
   if (source.data() == NULL || !source_.empty())
     return false;
-  source_.set(source.data(), source.size());
+  source_ = re2::StringPiece(source.data(), source.size());
 
   switch (state_) {
     case STATE_INIT:
