From a09c9ca489989dabe8e6ab30c8e2dd840f4ca624 Mon Sep 17 00:00:00 2001
From: Bart Ribbers <bribbers@disroot.org>
Date: Fri, 15 Jan 2021 16:29:09 +0100
Subject: [PATCH] Read skills from XDG home directory

Also move over skills from data_dir if they still exist
---
 mycroft/skills/msm_wrapper.py                 | 13 ++--
 mycroft/skills/mycroft_skill/mycroft_skill.py |  2 +-
 mycroft/skills/settings.py                    |  2 +-
 mycroft/skills/skill_manager.py               |  9 ++-
 mycroft/skills/skill_updater.py               |  4 +-
 pytest.ini                                    |  2 +
 requirements/tests.txt                        |  1 +
 scripts/prepare-msm.sh                        | 65 -------------------
 start-mycroft.sh                              |  1 -
 test/unittests/base.py                        |  3 +
 test/unittests/skills/test_skill_manager.py   |  8 ++-
 12 files changed, 29 insertions(+), 86 deletions(-)
 delete mode 100755 scripts/prepare-msm.sh

diff --git a/mycroft/skills/msm_wrapper.py b/mycroft/skills/msm_wrapper.py
index 4f579f85ac5..27753c678ab 100644
--- a/mycroft/skills/msm_wrapper.py
+++ b/mycroft/skills/msm_wrapper.py
@@ -22,6 +22,7 @@
 from collections import namedtuple
 from functools import lru_cache
 from os import path, makedirs
+from xdg import BaseDirectory
 
 from msm import MycroftSkillsManager, SkillRepo
 
@@ -33,9 +34,8 @@
     [
         'platform',
         'repo_branch',
-        'repo_cache',
         'repo_url',
-        'skills_dir',
+        'old_skills_dir',
         'versioned'
     ]
 )
@@ -70,9 +70,8 @@ def build_msm_config(device_config: dict) -> MsmConfig:
     return MsmConfig(
         platform=enclosure_config.get('platform', 'default'),
         repo_branch=msm_repo_config['branch'],
-        repo_cache=path.join(data_dir, msm_repo_config['cache']),
         repo_url=msm_repo_config['url'],
-        skills_dir=path.join(data_dir, msm_config['directory']),
+        old_skills_dir=path.join(data_dir, msm_config['directory']),
         versioned=msm_config['versioned']
     )
 
@@ -94,17 +93,15 @@ def create_msm(msm_config: MsmConfig) -> MycroftSkillsManager:
     msm_lock = _init_msm_lock()
     LOG.info('Acquiring lock to instantiate MSM')
     with msm_lock:
-        if not path.exists(msm_config.skills_dir):
-            makedirs(msm_config.skills_dir)
+        BaseDirectory.save_data_path('mycroft/skills')
 
         msm_skill_repo = SkillRepo(
-            msm_config.repo_cache,
             msm_config.repo_url,
             msm_config.repo_branch
         )
         msm_instance = MycroftSkillsManager(
             platform=msm_config.platform,
-            skills_dir=msm_config.skills_dir,
+            old_skills_dir=msm_config.old_skills_dir,
             repo=msm_skill_repo,
             versioned=msm_config.versioned
         )
diff --git a/mycroft/skills/mycroft_skill/mycroft_skill.py b/mycroft/skills/mycroft_skill/mycroft_skill.py
index c75a8a9b5fa..302c87eae7d 100644
--- a/mycroft/skills/mycroft_skill/mycroft_skill.py
+++ b/mycroft/skills/mycroft_skill/mycroft_skill.py
@@ -124,7 +124,7 @@ def __init__(self, name=None, bus=None, use_settings=True):
 
         # Get directory of skill
         #: Member variable containing the absolute path of the skill's root
-        #: directory. E.g. /opt/mycroft/skills/my-skill.me/
+        #: directory. E.g. $XDG_DATA_HOME/mycroft/skills/my-skill.me/
         self.root_dir = dirname(abspath(sys.modules[self.__module__].__file__))
 
         self.gui = SkillGUI(self)
diff --git a/mycroft/skills/settings.py b/mycroft/skills/settings.py
index c48416afac0..6e70783df0c 100644
--- a/mycroft/skills/settings.py
+++ b/mycroft/skills/settings.py
@@ -99,7 +99,7 @@ def save_settings(skill_dir, skill_settings):
     """Save skill settings to file."""
     settings_path = Path(skill_dir).joinpath('settings.json')
 
-    # Either the file already exists in /opt, or we are writing
+    # Either the file already exists or we are writing
     # to XDG_CONFIG_DIR and always have the permission to make
     # sure the file always exists
     if not Path(settings_path).exists():
diff --git a/mycroft/skills/skill_manager.py b/mycroft/skills/skill_manager.py
index d1bd79ff914..89109ac70a5 100644
--- a/mycroft/skills/skill_manager.py
+++ b/mycroft/skills/skill_manager.py
@@ -17,6 +17,8 @@
 from glob import glob
 from threading import Thread, Event, Lock
 from time import sleep, time, monotonic
+import shutil
+from xdg import BaseDirectory
 
 from mycroft.api import is_paired
 from mycroft.enclosure.api import EnclosureAPI
@@ -260,7 +262,9 @@ def run(self):
 
     def _remove_git_locks(self):
         """If git gets killed from an abrupt shutdown it leaves lock files."""
-        for i in glob(os.path.join(self.msm.skills_dir, '*/.git/index.lock')):
+        for i in glob(os.path.join(
+            BaseDirectory.save_data_path('mycroft/skills'),
+                '*/.git/index.lock')):
             LOG.warning('Found and removed git lock file: ' + i)
             os.remove(i)
 
@@ -306,7 +310,8 @@ def _load_skill(self, skill_directory):
         return skill_loader if load_status else None
 
     def _get_skill_directories(self):
-        skill_glob = glob(os.path.join(self.msm.skills_dir, '*/'))
+        skill_glob = glob(os.path.join(
+            BaseDirectory.save_data_path('mycroft/skills'), '*/'))
 
         skill_directories = []
         for skill_dir in skill_glob:
diff --git a/mycroft/skills/skill_updater.py b/mycroft/skills/skill_updater.py
index ace247e2db4..3e7cc9e0b77 100644
--- a/mycroft/skills/skill_updater.py
+++ b/mycroft/skills/skill_updater.py
@@ -53,7 +54,8 @@ def __init__(self, bus=None):
         self.config = Configuration.get()
         update_interval = self.config['skills']['update_interval']
         self.update_interval = int(update_interval) * ONE_HOUR
-        self.dot_msm_path = os.path.join(self.msm.skills_dir, '.msm')
+        self.dot_msm_path = os.path.join(
+                BaseDirectory.save_data_path('mycroft/skills'), '.msm')
         self.next_download = self._determine_next_download_time()
         self._log_next_download_time()
         self.installed_skills = set()
diff --git a/pytest.ini b/pytest.ini
index 6634fabcb06..92780db4d40 100644
--- a/pytest.ini
+++ b/pytest.ini
@@ -1,3 +1,5 @@
 [pytest]
 testpaths = test
 norecursedirs = wake_word
+env =
+    XDG_DATA_HOME=/tmp/mycroft-test
diff --git a/requirements/tests.txt b/requirements/tests.txt
index 9e038123e51..3d2e2b9a4c9 100644
--- a/requirements/tests.txt
+++ b/requirements/tests.txt
@@ -2,6 +2,7 @@ coveralls==1.8.2
 flake8==3.7.9
 pytest==5.2.4
 pytest-cov==2.8.1
+pytest-env==0.6.2
 cov-core==1.15.0
 sphinx==2.2.1
 sphinx-rtd-theme==0.4.3
diff --git a/scripts/prepare-msm.sh b/scripts/prepare-msm.sh
deleted file mode 100755
index aae08b96f94..00000000000
--- a/scripts/prepare-msm.sh
+++ /dev/null
@@ -1,65 +0,0 @@
-#!/usr/bin/env bash
-
-# Copyright 2017 Mycroft AI Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#    http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-mycroft_root_dir="/opt/mycroft"  # Also change in configuration
-skills_dir="${mycroft_root_dir}"/skills
-# exit on any error
-set -Ee
-
-SOURCE="${BASH_SOURCE[0]}"
-while [ -h "$SOURCE" ] ; do
-    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
-    SOURCE="$(readlink "$SOURCE")"
-    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
-done
-DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
-
-# Determine which user is running this script
-setup_user=$USER
-setup_group=$( id -gn $USER )
-
-function found_exe() {
-    hash "$1" 2>/dev/null
-}
-
-if found_exe sudo ; then
-    # The main checks happen in dev_setup.sh, don't error here if we don't have sudo
-    SUDO=sudo
-fi
-
-# change ownership of ${mycroft_root_dir} to ${setup_user } recursively
-function change_ownership {
-    echo "Changing ownership of" ${mycroft_root_dir} "to user:" ${setup_user} "with group:" ${setup_group}
-    $SUDO chown -Rf ${setup_user}:${setup_group} ${mycroft_root_dir}
-}
-
-
-if [[ ${CI} != true ]] ; then
-    if [ ! -d ${skills_dir} ] ; then
-        echo "Create ${skills_dir}"
-        $SUDO mkdir -p ${skills_dir}
-        change_ownership
-    fi
-
-    if [ ! -w ${SKILLS_DIR} ] ; then
-        change_ownership
-    fi
-fi
-
-# fix ownership of ${mycroft_root_dir} if it is not owned by the ${setup_user}
-if [[ $( stat -c "%U:%G" ${mycroft_root_dir} ) != "${setup_user}:${setup_group}" ]] ; then
-    change_ownership
-fi
diff --git a/start-mycroft.sh b/start-mycroft.sh
index 05814c510d8..1e5fd30cbae 100755
--- a/start-mycroft.sh
+++ b/start-mycroft.sh
@@ -88,7 +88,6 @@ first_time=true
 function init-once() {
     if ($first_time) ; then
         echo "Initializing..."
-        "${DIR}/scripts/prepare-msm.sh"
         source-venv
         first_time=false
     fi
diff --git a/test/unittests/base.py b/test/unittests/base.py
index fed93941769..ee86778fa10 100644
--- a/test/unittests/base.py
+++ b/test/unittests/base.py
@@ -18,6 +18,8 @@
 from unittest import TestCase
 from unittest.mock import patch
 
+from xdg import BaseDirectory
+
 from .mocks import mock_msm, mock_config, MessageBusMock
 
 
@@ -54,3 +56,4 @@ def _mock_log(self):
 
     def tearDown(self):
         rmtree(str(self.temp_dir))
+        rmtree(BaseDirectory.save_data_path('mycroft'))
diff --git a/test/unittests/skills/test_skill_manager.py b/test/unittests/skills/test_skill_manager.py
index dfd92718f40..cc6130362ea 100644
--- a/test/unittests/skills/test_skill_manager.py
+++ b/test/unittests/skills/test_skill_manager.py
@@ -13,6 +13,8 @@
 # limitations under the License.
 #
 from os import path
+from pathlib import Path
+from xdg import BaseDirectory
 from unittest import TestCase
 from unittest.mock import Mock, patch
 
@@ -90,7 +92,8 @@ def _mock_skill_updater(self):
         self.skill_updater_mock = skill_updater_patch.start()
 
     def _mock_skill_loader_instance(self):
-        self.skill_dir = self.temp_dir.joinpath('test_skill')
+        self.skill_dir = (Path(BaseDirectory.save_data_path('mycroft/skills'))
+                          .joinpath('test_skill'))
         self.skill_loader_mock = Mock(spec=SkillLoader)
         self.skill_loader_mock.instance = Mock()
         self.skill_loader_mock.instance.default_shutdown = Mock()
@@ -123,8 +126,7 @@ def test_instantiate(self):
         )
 
     def test_remove_git_locks(self):
-        git_dir = self.temp_dir.joinpath('foo/.git')
-        git_dir.mkdir(parents=True)
+        git_dir = Path(BaseDirectory.save_data_path('mycroft/skills/foo/.git'))
         git_lock_file_path = str(git_dir.joinpath('index.lock'))
         with open(git_lock_file_path, 'w') as git_lock_file:
             git_lock_file.write('foo')
