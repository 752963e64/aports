Until bpftrace is updated to use newer BTF functions, we need to use the deprecated form.

See the comment here: https://github.com/libbpf/libbpf/blob/fd181bc349bd6d479cc0a9fdf122885ad352eaf8/src/btf.h#L294-L297

diff --git a/src/btf.cpp b/src/btf.cpp
index 7d83cf68..a26f7a48 100644
--- a/src/btf.cpp
+++ b/src/btf.cpp
@@ -225,7 +225,7 @@ std::string BTF::c_def(const std::unordered_set<std::string> &set) const
   char err_buf[256];
   int err;
 
-  dump = btf_dump__new(btf, nullptr, &opts, dump_printf);
+  dump = btf_dump__new_deprecated(btf, nullptr, &opts, dump_printf);
   err = libbpf_get_error(dump);
   if (err)
   {
@@ -496,7 +496,7 @@ std::unique_ptr<std::istream> BTF::get_all_funcs() const
   char err_buf[256];
   int err;
 
-  dump = btf_dump__new(btf, nullptr, &opts, dump_printf);
+  dump = btf_dump__new_deprecated(btf, nullptr, &opts, dump_printf);
   err = libbpf_get_error(dump);
   if (err)
   {
@@ -554,7 +554,7 @@ std::map<std::string, std::vector<std::string>> BTF::get_params(
   char err_buf[256];
   int err;
 
-  dump = btf_dump__new(btf, nullptr, &opts, dump_printf);
+  dump = btf_dump__new_deprecated(btf, nullptr, &opts, dump_printf);
   err = libbpf_get_error(dump);
   if (err)
   {
@@ -648,7 +648,7 @@ std::set<std::string> BTF::get_all_structs() const
   char err_buf[256];
   int err;
 
-  dump = btf_dump__new(btf, nullptr, &opts, dump_printf);
+  dump = btf_dump__new_deprecated(btf, nullptr, &opts, dump_printf);
   err = libbpf_get_error(dump);
   if (err)
   {
