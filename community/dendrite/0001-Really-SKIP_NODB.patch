From d7e79a7d0214806be2f0ef603efd9d109e30324a Mon Sep 17 00:00:00 2001
From: Till Faelligen <tfaelligen@gmail.com>
Date: Wed, 18 May 2022 12:32:44 +0200
Subject: [PATCH 1/5] Really SKIP_NODB

---
 test/db.go | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/test/db.go b/test/db.go
index a1754cd08b..a444af316f 100644
--- a/test/db.go
+++ b/test/db.go
@@ -63,6 +63,9 @@ func createRemoteDB(t *testing.T, dbName, user, connStr string) {
 	if err != nil {
 		fatalError(t, "failed to open postgres conn with connstr=%s : %s", connStr, err)
 	}
+	if err = db.Ping(); err != nil {
+		fatalError(t, "failed to open postgres conn with connstr=%s : %s", connStr, err)
+	}
 	_, err = db.Exec(fmt.Sprintf(`CREATE DATABASE %s;`, dbName))
 	if err != nil {
 		pqErr, ok := err.(*pq.Error)

From 09b6e2e877e9b8cf07b1754de9eea7abf4f053ab Mon Sep 17 00:00:00 2001
From: Till Faelligen <tfaelligen@gmail.com>
Date: Wed, 18 May 2022 12:40:18 +0200
Subject: [PATCH 2/5] Use fatalError in createLocalDB

---
 test/db.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/test/db.go b/test/db.go
index a444af316f..4a5c53c0b6 100644
--- a/test/db.go
+++ b/test/db.go
@@ -54,7 +54,7 @@ func createLocalDB(t *testing.T, dbName string) {
 	}
 	err := createDB.Run()
 	if err != nil && !Quiet {
-		fmt.Println("createLocalDB returned error:", err)
+		fatalError(t, "createLocalDB returned error: %s", err)
 	}
 }
 

From cda49e8d968b24f8a1f7d6119f7e8eafe0e90017 Mon Sep 17 00:00:00 2001
From: Till Faelligen <tfaelligen@gmail.com>
Date: Wed, 18 May 2022 13:15:15 +0200
Subject: [PATCH 3/5] Check if createdb exists

---
 test/db.go | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/test/db.go b/test/db.go
index 4a5c53c0b6..3bead50eb3 100644
--- a/test/db.go
+++ b/test/db.go
@@ -44,8 +44,9 @@ func fatalError(t *testing.T, format string, args ...interface{}) {
 }
 
 func createLocalDB(t *testing.T, dbName string) {
-	if !Quiet {
-		t.Log("Note: tests require a postgres install accessible to the current user")
+	if _, err := exec.LookPath("createdb"); err != nil && !Quiet {
+		fatalError(t, "Note: tests require a postgres install accessible to the current user")
+		return
 	}
 	createDB := exec.Command("createdb", dbName)
 	if !Quiet {
@@ -54,7 +55,7 @@ func createLocalDB(t *testing.T, dbName string) {
 	}
 	err := createDB.Run()
 	if err != nil && !Quiet {
-		fatalError(t, "createLocalDB returned error: %s", err)
+		fmt.Println(t, "createLocalDB returned error: %s", err)
 	}
 }
 

From f4bc86adafb6e57f525d2e642d7b0f0e68c1c34c Mon Sep 17 00:00:00 2001
From: Till Faelligen <tfaelligen@gmail.com>
Date: Wed, 18 May 2022 13:16:43 +0200
Subject: [PATCH 4/5] Rever change

---
 test/db.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/test/db.go b/test/db.go
index 3bead50eb3..30a85e6146 100644
--- a/test/db.go
+++ b/test/db.go
@@ -55,7 +55,7 @@ func createLocalDB(t *testing.T, dbName string) {
 	}
 	err := createDB.Run()
 	if err != nil && !Quiet {
-		fmt.Println(t, "createLocalDB returned error: %s", err)
+		fmt.Println("createLocalDB returned error:", err)
 	}
 }
 

From 631da5e399ae0403c6b61bddc4e38e1fb25b5544 Mon Sep 17 00:00:00 2001
From: Till Faelligen <tfaelligen@gmail.com>
Date: Wed, 18 May 2022 15:01:42 +0200
Subject: [PATCH 5/5] Remove !Quiet

---
 test/db.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/test/db.go b/test/db.go
index 30a85e6146..c7cb919f67 100644
--- a/test/db.go
+++ b/test/db.go
@@ -44,7 +44,7 @@ func fatalError(t *testing.T, format string, args ...interface{}) {
 }
 
 func createLocalDB(t *testing.T, dbName string) {
-	if _, err := exec.LookPath("createdb"); err != nil && !Quiet {
+	if _, err := exec.LookPath("createdb"); err != nil {
 		fatalError(t, "Note: tests require a postgres install accessible to the current user")
 		return
 	}
