From c7bbf4fcf9175b90131f5b553ea6fc6cb007327c Mon Sep 17 00:00:00 2001
From: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date: Sun, 24 May 2020 03:46:08 +0200
Subject: [PATCH 1/2] render: Catch up with wlroots' wlr_client_buffer

---
 src/render.c        | 4 +---
 2 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/src/render.c b/src/render.c
index 3273fc7..b5117ce 100644
--- a/src/render.c
+++ b/src/render.c
@@ -285,9 +285,7 @@ static bool scan_out_fullscreen_view(struct roots_output *output) {
 
 	wlr_presentation_surface_sampled(output->desktop->presentation, surface);
 
-	if (!wlr_output_attach_buffer(wlr_output, surface->buffer)) {
-		return false;
-	}
+	wlr_output_attach_buffer(wlr_output, &surface->buffer->base);
 	return wlr_output_commit(wlr_output);
 }
 

From 8e132eb2529753001b776f0dd32402798f052ff9 Mon Sep 17 00:00:00 2001
From: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date: Sun, 21 Jun 2020 20:24:20 +0200
Subject: [PATCH 2/2] render: Make the EGL context current when rendering to
 texture

Recent wlroots change made the renderer unset the context when not used.
---
 src/render.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/render.c b/src/render.c
index b5117ce..7f6c26b 100644
--- a/src/render.c
+++ b/src/render.c
@@ -10,6 +10,7 @@
 #include <wlr/backend.h>
 #include <wlr/config.h>
 #include <wlr/render/wlr_renderer.h>
+#include <wlr/render/gles2.h>
 #include <wlr/types/wlr_compositor.h>
 #include <wlr/types/wlr_matrix.h>
 #include <wlr/types/wlr_buffer.h>
@@ -431,8 +432,14 @@ view_render_to_buffer (struct roots_view *view, int width, int height, int strid
 {
   PhocServer *server = phoc_server_get_default ();
   struct wlr_surface *surface = view->wlr_surface;
+  struct wlr_egl *egl = wlr_gles2_renderer_get_egl (server->renderer);
   GLuint tex, fbo;
 
+  if (!wlr_egl_make_current (egl, EGL_NO_SURFACE, NULL)) {
+      g_warning ("egl_make_current failed!");
+      return;
+  }
+
   glGenTextures (1, &tex);
   glBindTexture (GL_TEXTURE_2D, tex);
   glTexImage2D (GL_TEXTURE_2D, 0, GL_BGRA_EXT, width, height, 0, GL_BGRA_EXT, GL_UNSIGNED_BYTE, NULL);
@@ -452,6 +459,8 @@ view_render_to_buffer (struct roots_view *view, int width, int height, int strid
   glDeleteFramebuffers (1, &fbo);
   glDeleteTextures (1, &tex);
   glBindFramebuffer (GL_FRAMEBUFFER, 0);
+
+  wlr_egl_unset_current (egl);
 }
 
 static void surface_send_frame_done_iterator(struct roots_output *output,
-- 
2.26.2

