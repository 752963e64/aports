From 2b217ce78c82a00c8b261184a8623df02635726b Mon Sep 17 00:00:00 2001
From: Aleix Pol <aleixpol@kde.org>
Date: Fri, 11 Feb 2022 17:21:42 +0100
Subject: [PATCH] Initialize the KSldApp after we connect

In some cases, initialize() will emit an aboutToLock() signal that we
need to catch. Otherwise LockOnStart finds its m_waylandFd=-1


(cherry picked from commit c9715a828d2b481a8ae9451033e0d04d20c5de81)
---
 src/wayland_server.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/wayland_server.cpp b/src/wayland_server.cpp
index 9fb1897ed1..c850a1b697 100644
--- a/src/wayland_server.cpp
+++ b/src/wayland_server.cpp
@@ -594,7 +594,6 @@ void WaylandServer::initScreenLocker()
     auto *screenLockerApp = ScreenLocker::KSldApp::self();
 
     ScreenLocker::KSldApp::self()->setGreeterEnvironment(kwinApp()->processStartupEnvironment());
-    ScreenLocker::KSldApp::self()->initialize();
 
     connect(ScreenLocker::KSldApp::self(), &ScreenLocker::KSldApp::aboutToLock, this,
         [this, screenLockerApp] () {
@@ -633,6 +632,8 @@ void WaylandServer::initScreenLocker()
         }
     );
 
+    ScreenLocker::KSldApp::self()->initialize();
+
     if (m_initFlags.testFlag(InitializationFlag::LockScreen)) {
         ScreenLocker::KSldApp::self()->lock(ScreenLocker::EstablishLock::Immediate);
     }
-- 
GitLab

