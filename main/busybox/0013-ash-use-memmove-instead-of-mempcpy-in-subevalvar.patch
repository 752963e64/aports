From a66bd938661090ee0043d840b0a56a0e55a68904 Mon Sep 17 00:00:00 2001
From: Ariadne Conill <ariadne@dereferenced.org>
Date: Sun, 27 Feb 2022 16:18:29 +0000
Subject: [PATCH] ash: use memmove instead of mempcpy in subevalvar

While investigating a sporadic crash issue relating to variable
substitution in Alpine Linux, we managed to get a reliable crash when
building BusyBox with ASan, due to the source and destination
overlapping for mempcpy, which resulted in sporadic data corruption
outside ASan.

Per POSIX, memcpy is not allowed to overlap source and destination, as
mempcpy is a GNU-specific extension to mempcpy, the same semantics can
be assumed. Accordingly, we use memmove instead, which does not have
this limitation.
---
 shell/ash.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/shell/ash.c b/shell/ash.c
index adb0f223a..8acd2d32e 100644
--- a/shell/ash.c
+++ b/shell/ash.c
@@ -7187,7 +7187,8 @@ subevalvar(char *start, char *str, int strloc,
 			len = orig_len - pos;
 
 		if (!quotes) {
-			loc = mempcpy(startp, startp + pos, len);
+			memmove(startp, startp + pos, len);
+			loc = startp + len;
 		} else {
 			for (vstr = startp; pos != 0; pos--) {
 				if ((unsigned char)*vstr == CTLESC)
