From 538b94ebcee49de528e639f922d5e5c61d9bbd94 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=B6ren=20Tempel?= <soeren+git@soeren-tempel.net>
Date: Sun, 6 Jun 2021 20:29:53 +0200
Subject: [PATCH] load_state: Only delete config if one was loaded

If load_configuration fails with open_failed == true, load_state will
jump to the out label without config being initialized and pass this
uninitialized config value to snd_config_delete. This commit fixes this
issue by initializing config with NULL and checking if it is non-null
before invoking snd_config_delete.

To reproduce this error:

	$ gdb alsactl
	(gdb) run restore 0
	Starting program: /usr/sbin/alsactl restore 0
	/usr/sbin/alsactl: state_lock:129: file /var/lib/alsa/asound.state lock error: Permission denied
	/usr/sbin/alsactl: load_state:1635: Cannot open /var/lib/alsa/asound.state for reading: Permission denied
	alsa-lib parser.c:2372:(load_toplevel_config) Unable to find the top-level configuration file '/usr/share/alsa/ucm2/ucm.conf'.
	alsa-lib main.c:1402:(snd_use_case_mgr_open) error: failed to import hw:0 use case configuration -2
	Found hardware: "HDA-Intel" "Realtek ALC269VC" "HDA:10ec0269,17aa21fa,00100203 HDA:80862806,80860101,00100000" "0x17aa" "0x21fa"
	Hardware is initialized using a generic method

	Program received signal SIGSEGV, Segmentation fault.
	0x00007ffff7eca458 in snd_config_delete (config=0x0) at conf.c:2323
---
 alsactl/state.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/alsactl/state.c b/alsactl/state.c
index 44fda3f..5af8245 100644
--- a/alsactl/state.c
+++ b/alsactl/state.c
@@ -1624,7 +1624,7 @@ int load_state(const char *cfgdir, const char *file,
 {
 	int err, finalerr = 0, open_failed;
 	struct snd_card_iterator iter;
-	snd_config_t *config;
+	snd_config_t *config = NULL;
 	const char *cardname1;
 
 	err = load_configuration(file, &config, &open_failed);
@@ -1676,7 +1676,8 @@ int load_state(const char *cfgdir, const char *file,
 	}
 	err = finalerr ? finalerr : snd_card_iterator_error(&iter);
 out:
-	snd_config_delete(config);
+	if (config)
+		snd_config_delete(config);
 	snd_config_update_free_global();
 	return err;
 }
