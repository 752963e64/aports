# Contributor: Eric Molitor <eric@molitor.org>
# Contributor: Travis Tilley <ttilley@gmail.com>
# Contributor: Jakub Jirutka <jakub@jirutka.cz>
# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=compiler-rt
# Note: Update together with llvm.
pkgver=12.0.1
pkgrel=2
_llvmver=${pkgver%%.*}
pkgdesc="LLVM compiler-rt runtime libraries"
arch="all"
url="https://llvm.org/"
license="Apache-2.0"
makedepends="
	cmake
	linux-headers
	clang
	llvm-dev>=$_llvmver
	llvm-static>=$_llvmver
	samurai
	python3
	libexecinfo-dev
	"
checkdepends="gtest-dev llvm-test-utils>=$_llvmver"
subpackages="$pkgname-static"
options="!check" # Doesn't seem to work with linux ld: /lib/ld-musl-x86_64.so.1: cannot load --version: No such file or directory
source="https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/compiler-rt-$pkgver.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/llvm-$pkgver.src.tar.xz
	fuzzer-size_t-musl.patch
	fix-arch-detection-for-ppc64le.patch
	xray-ppc64-musl.patch

	sanitizer-supported-arch.patch
	aarch64-ucontext.patch
	sanitizer-x86_64-execinfo.patch
	sanitizer-ppc64-musl.patch
	"
builddir="$srcdir/$pkgname-$pkgver.src"

case "$CARCH" in
	# Sanitizers are broken on other arches.
	# Keep in sync with sanitizer-supported-arch.patch.
	aarch64 | ppc64le | x86_64) _build_sanitizers='ON';;
	*) _build_sanitizers='OFF';;
esac

prepare() {
	default_prepare

	sed -i 's|/usr/bin/env python$|/usr/bin/python3|' \
		lib/hwasan/scripts/hwasan_symbolize
}

build() {
	mkdir -p "$builddir"/build
	cd "$builddir"/build

	# compiler-rt uses llvm intrinsic types for testing
	# and therefore requires clang
	# It also needs LLVM source for testing purposes
	cmake .. \
		-DCMAKE_C_COMPILER=clang \
		-DCMAKE_CXX_COMPILER=clang++ \
		-DCMAKE_BUILD_TYPE=MinSizeRel \
		-DCMAKE_C_FLAGS_MINSIZEREL_INIT="$CFLAGS" \
		-DCMAKE_CXX_FLAGS_MINSIZEREL_INIT="$CXXFLAGS" \
		-DCMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT="$LDFLAGS" \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCOMPILER_RT_INCLUDE_TESTS=ON \
		-DCOMPILER_RT_BUILD_SANITIZERS=$_build_sanitizers \
		-DCOMPILER_RT_BUILD_XRAY=ON \
		-DCOMPILER_RT_INSTALL_PATH="/usr/lib/clang/$pkgver" \
		-DLLVM_EXTERNAL_LIT="/usr/bin/lit" \
		-DLLVM_MAIN_SRC_DIR="$srcdir/llvm-$pkgver.src" \
		-G Ninja
	ninja
}

check() {
	cd "$builddir"/build
	# remove test that does not work with PaX kernel
	rm ../test/builtins/Unit/enable_execute_stack_test.c \
		../test/builtins/Unit/clear_cache_test.c
	ninja check-compiler-rt
}

package() {
	cd "$builddir"/build

	DESTDIR="$pkgdir" ninja install
}

sha512sums="
708780aa47ef289a9700eb76c17cc1f3bab19b8245174e612b5f684c48448030263a72eeef1021b10bdffa6ace2df489adcbba9e7a790ccbcd5fe72056f63f92  compiler-rt-12.0.1.src.tar.xz
ff674afb4c8eea699a4756f1bb463f15098a7fa354c733de83c024f8f0cf238cd5f19ae3ec446831c7109235e293e2bf31d8562567ede163c8ec53af7306ba0f  llvm-12.0.1.src.tar.xz
1770e3c641dd7e6787471183ea2ace4543e2d4cf51df9612a28966d7414ef7f73b16fd46cec07a347c56a0c68c715659e554841aedf003b53c0997b2b6872936  fuzzer-size_t-musl.patch
6b1b9b3f7bc2dc70f64f7e096b4b7b657f788271161721c4a49a7a7a86aeff5787b8bd3239666d7d1efa686429e1246588e6d4bac1c765f305d38349965c169a  fix-arch-detection-for-ppc64le.patch
8ed6746474f135ebf77a0888957126ef3a5ded97551632198cf15659104d792487920324b74569dfc46140d26f0a268e2378d6f8878c1c9013b8e6f199eeb3b7  xray-ppc64-musl.patch
014951fa69792814f41cc5b3b412c2d3dcd9d1396d98a2b44eb304b13f238246fad94eb7ecd7c159788b7d3e4a1119f25a4dc2c33bc9330dd8800c6e1a586b43  sanitizer-supported-arch.patch
cc109c684f30842043a2e4991ef0bea626bd0ea8108bbe41cd3fc8610fec70e2ae0b17763a7ba1868c97fe2b1d32d6042ed19a833a3444908d601f0c26cedb67  aarch64-ucontext.patch
48d30e4f726949dbb5f3d3deb9b91dc1a73ab88f71534728233219327e1973619648690abd6e2f5fad041790dfc4d1db9aa9a58fa8f4c22160db80a6dd2a204e  sanitizer-x86_64-execinfo.patch
24064718e4bd48e2b57c9de94c2fe975f4ec9ae9bd635d542c06bc5d4c59e25a9bdaabbaf5cb5a5f3c9819d01c7a15b2e70aa7679d5bc1e7a52033e6f0bb107e  sanitizer-ppc64-musl.patch
"
