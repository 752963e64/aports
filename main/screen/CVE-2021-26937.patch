Description: [CVE-2021-26937] Fix out of bounds array access
Author: Axel Beckert <abe@debian.org>
Bug-Debian: https://bugs.debian.org/982435
Bug: https://savannah.gnu.org/bugs/?60030
Bug: https://lists.gnu.org/archive/html/screen-devel/2021-02/msg00000.html
Bug-OSS-Security: https://www.openwall.com/lists/oss-security/2021/02/09/3
Forwarded: https://lists.gnu.org/archive/html/screen-devel/2021-02/msg00004.html

--- a/encoding.c
+++ b/encoding.c
@@ -1408,21 +1408,23 @@
 	}
       /* FIXME: delete old char from all buffers */
     }
-  else if (!combchars[i])
-    {
-      combchars[i] = (struct combchar *)malloc(sizeof(struct combchar));
-      if (!combchars[i])
-	return;
-      combchars[i]->prev = i;
-      combchars[i]->next = i;
-    }
-  combchars[i]->c1 = c1;
-  combchars[i]->c2 = c;
-  mc->image = i & 0xff;
-  mc->font  = (i >> 8) + 0xd8;
-  mc->fontx = 0;
-  debug3("combinig char %x %x -> %x\n", c1, c, i + 0xd800);
-  comb_tofront(root, i);
+  else if (i < sizeof combchars / sizeof *combchars) {
+    if (!combchars[i])
+      {
+        combchars[i] = (struct combchar *)malloc(sizeof(struct combchar));
+        if (!combchars[i])
+          return;
+        combchars[i]->prev = i;
+        combchars[i]->next = i;
+      }
+    combchars[i]->c1 = c1;
+    combchars[i]->c2 = c;
+    mc->image = i & 0xff;
+    mc->font  = (i >> 8) + 0xd8;
+    mc->fontx = 0;
+    debug3("combinig char %x %x -> %x\n", c1, c, i + 0xd800);
+    comb_tofront(root, i);
+  }
 }
 
 #else /* !UTF8 */
