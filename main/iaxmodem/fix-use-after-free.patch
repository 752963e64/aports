make sure that we set the session to NULL when free'ing it

diff --git a/iaxmodem.c b/iaxmodem.c
index e1ab731..3c80c29 100644
--- a/iaxmodem.c
+++ b/iaxmodem.c
@@ -213,8 +213,8 @@ cleanup(int sig)
 	iax_unregister(session[1], server, regpeer, regsecret, "Exiting");
 	while (!(iaxevent = iax_get_event(1)));
 	iax_event_free(iaxevent);
-	iax_destroy(session[1]);
-	iax_destroy(session[0]);
+	iax_session_destroy(&session[1]);
+	iax_session_destroy(&session[0]);
     }
 
     /* Escalate privileges */
@@ -603,7 +603,7 @@ t31_call_control_handler(t31_state_t *s, void *user_data, int op, const char *nu
 		    sleep(1);	// apparently necessary or the answer can be ignored
 		}
 		iax_hangup(session[0], "Normal disconnect");
-		iax_destroy(session[0]);
+		iax_session_destroy(&session[0]);
 		phonestate = PHONE_FREED;
 		if (gothup) sighandler(SIGHUP);
 	    }
@@ -1202,7 +1202,7 @@ iaxmodem(const char *config, int nondaemon)
 	     * one.  In any case, omitting it seems harmless, as iax_destroy seems
 	     * to do the necessary job.
 	     */
-	    iax_destroy(session[0]);
+	    iax_session_destroy(&session[0]);
 	    phonestate = PHONE_FREED;
 	    modemstate = MODEM_ONHOOK;
 	    if (gothup) sighandler(SIGHUP);
@@ -1224,13 +1224,13 @@ iaxmodem(const char *config, int nondaemon)
 			printlog(LOG_INFO, "Registration completed successfully.\n");
 			if (iaxevent->ies.refresh > 0) refresh = iaxevent->ies.refresh;
 			regstate = REGISTERED;
-			iax_destroy(session[1]);
+			iax_session_destroy(&session[1]);
 			break;
 		    case IAX_EVENT_REGREJ:
 			printlog(LOG_ERROR, "Registration failed.\n");
 			/* To prevent fast looping with registration-attempts, we leave regstate PENDING. */
 			//regstate = UNREGISTERED;
-			iax_destroy(session[1]);
+			iax_session_destroy(&session[1]);
 			break;
 		    case IAX_EVENT_TIMEOUT:
 			if (regstate == PENDING) {
