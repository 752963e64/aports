diff --git a/src/io_archive.c b/src/io_archive.c
index de4741e..a8f3c3d 100644
--- a/src/io_archive.c
+++ b/src/io_archive.c
@@ -51,6 +51,7 @@ struct tar_header {
 
 #define GET_OCTAL(s)	get_octal(s, sizeof(s))
 #define PUT_OCTAL(s,v)	put_octal(s, sizeof(s), v)
+#define HAS_NULLTERM(a)	memchr(a, '\0', sizeof(a))
 
 static unsigned int get_octal(char *s, size_t l)
 {
@@ -125,6 +126,27 @@ static void handle_extended_header(struct apk_file_info *fi, apk_blob_t hdr)
 	}
 }
 
+static int validate_tar_header(struct tar_header *buf)
+{
+	/* Ensure that fields which should be null-terminated
+	 * are null-terminated to use string functions on them. */
+	if (!HAS_NULLTERM(buf->uname) || !HAS_NULLTERM(buf->gname) ||
+	    !HAS_NULLTERM(buf->linkname) || !HAS_NULLTERM(buf->magic) ||
+	    !HAS_NULLTERM(buf->name) || !HAS_NULLTERM(buf->prefix)) {
+		return FALSE;
+	}
+
+	/* Validate the typeflag field. */
+	if (!strchr("KLgx01234567", buf->typeflag))
+		return FALSE;
+
+	/* Validate the size field. */
+	if (GET_OCTAL(buf->size) >= SSIZE_MAX - 512)
+		return FALSE;
+
+	return TRUE;
+}
+
 int apk_tar_parse(struct apk_istream *is, apk_archive_entry_parser parser,
 		  void *ctx, struct apk_id_cache *idc)
 {
@@ -141,6 +163,10 @@ int apk_tar_parse(struct apk_istream *is, apk_archive_entry_parser parser,
 	memset(&entry, 0, sizeof(entry));
 	entry.name = buf.name;
 	while ((r = apk_istream_read(is, &buf, 512)) == 512) {
+		if (!validate_tar_header(&buf)) {
+			goto err;
+		}
+
 		if (buf.name[0] == '\0') {
 			if (end) break;
 			end++;
