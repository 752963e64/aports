From 42845fc2d3f00d513dcd12d43f14148d02b22b7e Mon Sep 17 00:00:00 2001
From: Neil Horman <nhorman@tuxdriver.com>
Date: Thu, 18 Jun 2020 12:06:06 -0400
Subject: [PATCH] Fix buffer overflow in rtlsdr entropy source

when conditioning the buffer using AES on rtlsdr, we append the final
transformation to out+len, which indexes past the end of the provided
output buffer.  Since we don't actually care about the integrity of the
result (insofar as we don't ever intend to reuse or decrypt it, just do
the appending back at the start of the buffer, to avoid said overflow

Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
---
 rngd_rtlsdr.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/rngd_rtlsdr.c b/rngd_rtlsdr.c
index eca0ada..fed1f88 100644
--- a/rngd_rtlsdr.c
+++ b/rngd_rtlsdr.c
@@ -180,7 +180,7 @@ static size_t condition_buffer(unsigned char *in, unsigned char *out, size_t ins
 	* Finalise the encryption. Further ciphertext bytes may be written at
 	* this stage.
 	*/
-	if(1 != EVP_EncryptFinal_ex(ctx, out + len, &len))
+	if(1 != EVP_EncryptFinal_ex(ctx, out, &len))
 		return 0;
 	ciphertext_len += len;
 
