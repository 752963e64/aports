# Contributor: Sören Tempel <soeren+alpine@soeren-tempel.net>
# Maintainer: Sören Tempel <soeren+alpine@soeren-tempel.net>
pkgname=cyclone
pkgver=0.32.0
pkgrel=0
pkgdesc="A compiler for application development with R7RS Scheme"
url="https://justinethier.github.io/cyclone/"
# mips64: crashes during compilation of first Scheme file with cyclone
# s390x: ck on s390x does not have ck_pr_cas_8 (used by cyclone)
arch="all !mips64 !s390x"
license="MIT"
makedepends="ck-dev cyclone-bootstrap"
subpackages="$pkgname-dev"
source="$pkgname-$pkgver.tar.gz::https://github.com/justinethier/cyclone/archive/refs/tags/v$pkgver.tar.gz"

export PREFIX=/usr
export DATADIR=$PREFIX/lib/cyclone

# Since cyclone itself is written in Scheme it needs to be bootstraped.
# For this propose, upstream provides a dedicated cyclone-bootstrap
# repository which includes C files generated by a previous cyclone
# version. We package cyclone-bootstrap in a separate package and
# compile the original cyclone Scheme sources using it. This is useful
# to backport patches from upstream without having to patch
# compiler-generated C files.
#
# It should also be possible to use provides and a recursive dependency
# for bootstraping in the future. Like we do with rust and others.

# Flags to use build cyclone compiler, instead of cyclone-bootstrap.
_local_cyclone="./cyclone -I . -COPT '-Iinclude' -CLNK '-L.'"

build() {
	# Build the cyclone compiler using cyclone-bootstrap.
	PATH="$PATH:/usr/lib/cyclone-bootstrap/bin" make \
		CYC_PTHREAD_SET_STACK_SIZE=1
}

check() {
	make CYCLONE="$_local_cyclone" test
}

package() {
	DESTDIR="$pkgdir" make install
}

dev() {
	# Custom dev to not move Cyclone object files.
	# Allows using Cyclone without installing -dev.
	#
	# The -dev subpackage should only be needed for FFI.
	amove /usr/include /usr/lib/libcyclone*
}

sha512sums="
d3177d46f3a939f5c28766fa7e3e647b6754b24f390b4405a84dd4d68882aad9ba9e9faa039aca12125b713e2b5ca967d94ce5b31a5bed71bbbdcb5e07e0cbab  cyclone-0.32.0.tar.gz
"
