From 057a9daaced69f8e6c782337347f03b81ec165dc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=B6ren=20Tempel?= <soeren+git@soeren-tempel.net>
Date: Sun, 3 Apr 2022 03:37:04 +0200
Subject: [PATCH] generator: Don't error-out if /etc/locale.conf doesn't exist

musl-based Linux distributions (e.g. Alpine Linux) don't use
/etc/locale.conf since musl supports UTF-8 by default and doesn't
require any external locale files. To improve support for musl-based
Linux-distributions, this patches causes Booster to not error-out when
/etc/locale.conf doesn't exist. Furthermore, if no language is defined
in /etc/locale.conf (or the file doesn't exist), UTF-8 support is
assumed.

I am unsure if this breaks anything on glibc-based systems. Proposing
this for upstream inclusion to discuss this further. An alternative
would be to just allow /etc/locale.conf to not exist but don't assume
UTF-8 support (if no LANG is defined).
---
 generator/console.go | 17 ++++++++++++-----
 1 file changed, 12 insertions(+), 5 deletions(-)

diff --git a/generator/console.go b/generator/console.go
index 65de063..4f94c4b 100644
--- a/generator/console.go
+++ b/generator/console.go
@@ -3,8 +3,10 @@ package main
 import (
 	"bytes"
 	"compress/gzip"
+	"errors"
 	"fmt"
 	"io"
+	"io/fs"
 	"os"
 	"os/exec"
 	"strings"
@@ -24,14 +26,19 @@ func (img *Image) enableVirtualConsole(vConsolePath, localePath string) (*Virtua
 	// adding keymap
 	if keymap, ok := vprop["KEYMAP"]; ok {
 		lconf, err := os.ReadFile(localePath)
-		if err != nil {
+		if errors.Is(err, fs.ErrNotExist) {
+			// musl-based Linux distributions (e.g. Alpine Linux) don't use /etc/locale.conf since musl supports UTF-8 by default
+			// and doesn't require any external locale files.
+			conf.Utf = true
+		} else if err != nil {
 			return nil, err
+		} else {
+			lprop := parseProperties(string(lconf))
+			lang := lprop["LANG"]
+			debug("detected language - '%s'", lang)
+			conf.Utf = strings.HasSuffix(strings.ToLower(lang), "utf-8")
 		}
-		lprop := parseProperties(string(lconf))
 
-		lang := lprop["LANG"]
-		debug("detected language - '%s'", lang)
-		conf.Utf = strings.HasSuffix(strings.ToLower(lang), "utf-8")
 		conf.KeymapFile = "/console/keymap"
 
 		blob, err := loadKeymap(keymap, vprop["KEYMAP_TOGGLE"], conf.Utf)
