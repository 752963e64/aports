See https://github.com/anatol/booster/pull/131

From 0415eecb705fcb687f21e765e000af060445d164 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=B6ren=20Tempel?= <soeren+git@soeren-tempel.net>
Date: Wed, 16 Feb 2022 18:00:25 +0100
Subject: [PATCH] image: add workaround to deal with libraries located in /lib

While creating a booster package for Alpine Linux, I noticed that
booster assumes unconditionally that shared libraries are located in
/usr/lib. Contrary to Arch Linux, Alpine uses both /usr/lib and /lib.
For example, the shared library for our musl libc is located in /lib.

This patch adds a workaround which checks /lib (in addition to /usr/lib)
for shared libraries, if the library wasn't found in the latter.
---
 generator/image.go | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/generator/image.go b/generator/image.go
index 2154c9e..6660492 100644
--- a/generator/image.go
+++ b/generator/image.go
@@ -338,9 +338,18 @@ func (img *Image) AppendElfDependencies(ef *elf.File) error {
 		libs = append(libs, interp)
 	}
 
-	for _, p := range libs {
-		if !filepath.IsAbs(p) {
-			p = filepath.Join("/usr/lib", p)
+	for _, lib := range libs {
+		var p string
+		if filepath.IsAbs(lib) {
+			p = lib
+		} else {
+			p = filepath.Join("/usr/lib", lib)
+
+			// XXX: Workaround to support libraries located in /lib.
+			_, err := os.Open(p)
+			if os.IsNotExist(err) {
+				p = filepath.Join("/lib", lib)
+			}
 		}
 		err := img.AppendFile(p)
 		if err != nil {
