From b3c9e14b6de521f4ec08f90e4433e94d30480f71 Mon Sep 17 00:00:00 2001
From: Dominique Martinet <dominique.martinet@atmark-techno.com>
Date: Wed, 17 Mar 2021 15:12:54 +0900
Subject: [PATCH 2/2] Build on musl

- add -lobstack / -largp when required
- change __always_inline to inline
- add missing limits.h / sys/user.h include
- protect _SC_LEVEL1_DCACHE_LINESIZE by ifdef

At least the first part of this patch is not upstreamable as is
---
 CMakeLists.txt    | 16 ++++++++--------
 dutil.h           |  8 ++++----
 dwarves.c         |  1 +
 dwarves_fprintf.c |  2 ++
 hash.h            |  1 +
 pahole.c          |  1 +
 6 files changed, 17 insertions(+), 12 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 03aba23a8f71..ddc784073322 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -113,7 +113,7 @@ endif()
 add_library(dwarves SHARED ${dwarves_LIB_SRCS})
 set_target_properties(dwarves PROPERTIES VERSION 1.0.0 SOVERSION 1)
 set_target_properties(dwarves PROPERTIES INTERFACE_LINK_LIBRARIES "")
-target_link_libraries(dwarves ${DWARF_LIBRARIES} ${ZLIB_LIBRARIES} ${LIBBPF_LIBRARIES})
+target_link_libraries(dwarves ${DWARF_LIBRARIES} ${ZLIB_LIBRARIES} ${LIBBPF_LIBRARIES} -lobstack)
 
 set(dwarves_emit_LIB_SRCS dwarves_emit.c)
 add_library(dwarves_emit SHARED ${dwarves_emit_LIB_SRCS})
@@ -127,11 +127,11 @@ target_link_libraries(dwarves_reorganize dwarves)
 
 set(codiff_SRCS codiff.c)
 add_executable(codiff ${codiff_SRCS})
-target_link_libraries(codiff dwarves)
+target_link_libraries(codiff dwarves -largp)
 
 set(ctracer_SRCS ctracer.c)
 add_executable(ctracer ${ctracer_SRCS})
-target_link_libraries(ctracer dwarves dwarves_emit dwarves_reorganize ${ELF_LIBRARY})
+target_link_libraries(ctracer dwarves dwarves_emit dwarves_reorganize ${ELF_LIBRARY} -largp)
 
 set(dtagnames_SRCS dtagnames.c)
 add_executable(dtagnames ${dtagnames_SRCS})
@@ -139,19 +139,19 @@ target_link_libraries(dtagnames dwarves)
 
 set(pahole_SRCS pahole.c)
 add_executable(pahole ${pahole_SRCS})
-target_link_libraries(pahole dwarves dwarves_reorganize)
+target_link_libraries(pahole dwarves dwarves_reorganize -largp)
 
 set(pdwtags_SRCS pdwtags.c)
 add_executable(pdwtags ${pdwtags_SRCS})
-target_link_libraries(pdwtags dwarves)
+target_link_libraries(pdwtags dwarves -largp)
 
 set(pglobal_SRCS pglobal.c)
 add_executable(pglobal ${pglobal_SRCS})
-target_link_libraries(pglobal dwarves)
+target_link_libraries(pglobal dwarves -largp)
 
 set(pfunct_SRCS pfunct.c)
 add_executable(pfunct ${pfunct_SRCS})
-target_link_libraries(pfunct dwarves dwarves_emit ${ELF_LIBRARY})
+target_link_libraries(pfunct dwarves dwarves_emit ${ELF_LIBRARY} -largp)
 
 set(prefcnt_SRCS prefcnt.c)
 add_executable(prefcnt ${prefcnt_SRCS})
@@ -163,7 +163,7 @@ target_link_libraries(scncopy dwarves ${ELF_LIBRARY})
 
 set(syscse_SRCS syscse.c)
 add_executable(syscse ${syscse_SRCS})
-target_link_libraries(syscse dwarves)
+target_link_libraries(syscse dwarves -largp)
 
 install(TARGETS codiff ctracer dtagnames pahole pdwtags
 		pfunct pglobal prefcnt scncopy syscse RUNTIME DESTINATION
diff --git a/dutil.h b/dutil.h
index 0838dff2d679..df633ad831b4 100644
--- a/dutil.h
+++ b/dutil.h
@@ -42,7 +42,7 @@ static inline __attribute__((const)) bool is_power_of_2(unsigned long n)
  * This is defined the same way as ffs.
  * Note fls(0) = 0, fls(1) = 1, fls(0x80000000) = 32.
  */
-static __always_inline int fls(int x)
+static inline int fls(int x)
 {
 	return x ? sizeof(x) * 8 - __builtin_clz(x) : 0;
 }
@@ -59,7 +59,7 @@ static __always_inline int fls(int x)
  * at position 64.
  */
 #if BITS_PER_LONG == 32
-static __always_inline int fls64(uint64_t x)
+static inline int fls64(uint64_t x)
 {
 	uint32_t h = x >> 32;
 	if (h)
@@ -73,7 +73,7 @@ static __always_inline int fls64(uint64_t x)
  *
  * Undefined if no set bit exists, so code should check against 0 first.
  */
-static __always_inline unsigned long __fls(unsigned long word)
+static inline unsigned long __fls(unsigned long word)
 {
 	int num = BITS_PER_LONG - 1;
 
@@ -104,7 +104,7 @@ static __always_inline unsigned long __fls(unsigned long word)
 	return num;
 }
 
-static __always_inline int fls64(uint64_t x)
+static inline int fls64(uint64_t x)
 {
 	if (x == 0)
 		return 0;
diff --git a/dwarves.c b/dwarves.c
index 4aa2cd7dcf90..e4637541896a 100644
--- a/dwarves.c
+++ b/dwarves.c
@@ -20,6 +20,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
+#include <limits.h>
 #include <sys/stat.h>
 #include <sys/utsname.h>
 
diff --git a/dwarves_fprintf.c b/dwarves_fprintf.c
index c96a6fb0df5a..670b431dc93c 100644
--- a/dwarves_fprintf.c
+++ b/dwarves_fprintf.c
@@ -1956,11 +1956,13 @@ void cus__print_error_msg(const char *progname, const struct cus *cus,
 void dwarves__fprintf_init(uint16_t user_cacheline_size)
 {
 	if (user_cacheline_size == 0) {
+#ifdef _SC_LEVEL1_DCACHE_LINESIZE
 		long sys_cacheline_size = sysconf(_SC_LEVEL1_DCACHE_LINESIZE);
 
 		if (sys_cacheline_size > 0)
 			cacheline_size = sys_cacheline_size;
 		else
+#endif
 			cacheline_size = 64; /* Fall back to a sane value */
 	} else
 		cacheline_size = user_cacheline_size;
diff --git a/hash.h b/hash.h
index d3aa41636126..a984a672aa4f 100644
--- a/hash.h
+++ b/hash.h
@@ -15,6 +15,7 @@
  */
 
 #include <stdint.h>
+#include <sys/reg.h>
 
 /* 2^31 + 2^29 - 2^25 + 2^22 - 2^19 - 2^16 + 1 */
 #define GOLDEN_RATIO_PRIME_32 0x9e370001UL
diff --git a/pahole.c b/pahole.c
index 68dd16670300..1791e2b4e37c 100644
--- a/pahole.c
+++ b/pahole.c
@@ -16,6 +16,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
+#include <limits.h>
 #include <bpf/libbpf.h>
 
 #include "dwarves_reorganize.h"
-- 
2.30.2

