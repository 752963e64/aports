From de3adf98e117a674411b120eba74d9adf9699227 Mon Sep 17 00:00:00 2001
From: Bart Ribbers <bribbers@disroot.org>
Date: Tue, 11 Jan 2022 10:29:39 +0100
Subject: [PATCH 1/3] CMake: use PROJECT_VERSION rather than CPACK to determine
 project version

PROJECT_VERSION is built-in into CMake and the usual way to set the
project version. Allows us to get rid of a separate ParseVersion.cmake
file
---
 CMakeLists.txt             |  9 ++++-----
 ParseVersion.cmake         | 28 ----------------------------
 cmake/DoxygenTargets.cmake |  2 +-
 3 files changed, 5 insertions(+), 34 deletions(-)
 delete mode 100644 ParseVersion.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 552736b..fe1cd6d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,10 +2,12 @@
 # http://academic.cleardefinition.com/
 # Iowa State University HCI Graduate Program/VRAC
 
-cmake_minimum_required(VERSION 2.8.0)
+cmake_minimum_required(VERSION 3.0.0)
 
 # Set package properties
-project(WiiUse)
+project(WiiUse
+       VERSION 0.15.5
+       DESCRIPTION "Feature-complete cross-platform Wii Remote access library")
 
 ###
 # Set up options
@@ -15,9 +17,6 @@ if(NOT CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
 	set(SUBPROJECT YES)
 endif()
 
-include("./ParseVersion.cmake")
-message(STATUS "Configuring WiiUse version ${CPACK_PACKAGE_VERSION}")
-
 option(BUILD_EXAMPLE "Should we build the example app?" YES)
 option(BUILD_EXAMPLE_SDL "Should we build the SDL-based example app?" YES)
 option(BUILD_WIIUSE_SHARED_LIB "Should we build as a shared library (dll/so)?" YES)
@@ -123,7 +122,7 @@ if(NOT SUBPROJECT)
 	include(GetCompilerInfoString)
 	get_compiler_info_string(_compiler)
 
-	set(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}-${CPACK_PACKAGE_VERSION}-${_compiler}")
+	set(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}-${PROJECT_VERSION}-${_compiler}")
 
 	# Include the packaging system now that we have it all set up
 	include(CPack)
diff --git a/ParseVersion.cmake b/ParseVersion.cmake
deleted file mode 100644
index 96873cc..0000000
--- a/ParseVersion.cmake
+++ /dev/null
@@ -1,28 +0,0 @@
-set(_version_file "${CMAKE_CURRENT_SOURCE_DIR}/src/wiiuse.h")
-if(EXISTS "${_version_file}")
-	file(READ "${_version_file}" _version_contents)
-endif()
-
-if("${_version_contents}" MATCHES "WIIUSE_MAJOR ([0-9]+)")
-	set(CPACK_PACKAGE_VERSION_MAJOR "${CMAKE_MATCH_1}")
-else()
-	set(CPACK_PACKAGE_VERSION_MAJOR "0")
-	message("Could not parse major version from wiiuse.h")
-endif()
-
-if("${_version_contents}" MATCHES "WIIUSE_MINOR ([0-9]+)")
-	set(CPACK_PACKAGE_VERSION_MINOR "${CMAKE_MATCH_1}")
-else()
-	set(CPACK_PACKAGE_VERSION_MINOR "13")
-	message("Could not parse minor version from wiiuse.h")
-endif()
-
-if("${_version_contents}" MATCHES "WIIUSE_MICRO ([0-9]+)")
-	set(CPACK_PACKAGE_VERSION_MICRO "${CMAKE_MATCH_1}")
-else()
-	set(CPACK_PACKAGE_VERSION_MICRO "0")
-	message("Could not parse micro version from wiiuse.h")
-endif()
-
-set(CPACK_PACKAGE_VERSION
-	"${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_MICRO}")
\ No newline at end of file
diff --git a/cmake/DoxygenTargets.cmake b/cmake/DoxygenTargets.cmake
index df7c088..2e9c783 100644
--- a/cmake/DoxygenTargets.cmake
+++ b/cmake/DoxygenTargets.cmake
@@ -211,7 +211,7 @@ function(add_doxygen _doxyfile)
 	endif()
 
 	if(NOT PROJECT_NUMBER)
-		set(PROJECT_NUMBER "${CPACK_PACKAGE_VERSION}")
+		set(PROJECT_NUMBER "${PROJECT_VERSION}")
 	endif()
 
 	if(DOXYGEN_FOUND)

From 95f15d84884f52aaa318749f49df451716e48cf7 Mon Sep 17 00:00:00 2001
From: Bart Ribbers <bribbers@disroot.org>
Date: Tue, 11 Jan 2022 10:32:52 +0100
Subject: [PATCH 2/3] CMake: use built-in BUILD_SHARED_LIBS variables rather
 than a custom one

---
 CMakeLists.txt           | 12 ++++--------
 src/CMakeLists.txt       |  2 +-
 3 files changed, 12 insertions(+), 16 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fe1cd6d..b72b925 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -19,7 +19,6 @@ endif()
 
 option(BUILD_EXAMPLE "Should we build the example app?" YES)
 option(BUILD_EXAMPLE_SDL "Should we build the SDL-based example app?" YES)
-option(BUILD_WIIUSE_SHARED_LIB "Should we build as a shared library (dll/so)?" YES)
 option(INSTALL_EXAMPLES "Should we install the example apps?" YES)
 
 option(CPACK_MONOLITHIC_INSTALL "Only produce a single component installer, rather than multi-component." NO)
@@ -33,10 +32,7 @@ list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
 #include(UseBackportedModules)
 include(DoxygenTargets)
 
-if(BUILD_WIIUSE_SHARED_LIB)
-	set(WIIUSE_LIB_TYPE SHARED)
-else()
-	set(WIIUSE_LIB_TYPE STATIC)
+if(NOT BUILD_SHARED_LIBS)
 	add_definitions(-DWIIUSE_STATIC)
 endif()
 
@@ -45,10 +41,10 @@ if(NOT WIN32 AND NOT APPLE)
 	find_package(Bluez REQUIRED)
 	include_directories(${BLUEZ_INCLUDE_DIRS})
 
-        include("GNUInstallDirs")
+	include("GNUInstallDirs")
 else()
-        set(LINUX NO)
-        set(CMAKE_INSTALL_LIBDIR "lib")
+	set(LINUX NO)
+	set(CMAKE_INSTALL_LIBDIR "lib")
 endif()
 
 if(WIN32)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index c5670c9..7327dfb 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -56,7 +56,7 @@ endif()
 
 add_definitions(-DWIIUSE_COMPILE_LIB)
 
-add_library(wiiuse ${WIIUSE_LIB_TYPE} ${SOURCES} ${API})
+add_library(wiiuse ${SOURCES} ${API})
 
 if(WIN32)
 	target_link_libraries(wiiuse ws2_32 setupapi ${WINHID_LIBRARIES})

From d976421e11f880641e6484a982af2d26a5fc5d3a Mon Sep 17 00:00:00 2001
From: Bart Ribbers <bribbers@disroot.org>
Date: Tue, 11 Jan 2022 10:33:08 +0100
Subject: [PATCH 3/3] CMake: make project usable as a pkgconfig module

This way other projects using WiiUse can use the usual PkgConfig methods
of finding the library to link to and it's include files.

For example in CMake this now works:

pkg_check_modules(WIIUSE IMPORTED_TARGET wiiuse)
target_link_libraries(projectname PkgConfig::WIIUSE)

Also set the library version on the actual shared library. Now
/usr/lib/wiiuse.so gets linked to /usr/lib/wiiuse.so.0 and
/usr/lib/wiiuse.so.0.15.5, indicating a certain API compatibility (as
long as the major version doesn't get increased, the API is considered
backwards-compatible with any other minor version according to semver)
and allowing Linux distributions to properly split out a -dev package from the main package.
---
 CMakeLists.txt     | 6 ++++++
 src/CMakeLists.txt | 4 ++++
 wiiuse.pc.in       | 9 +++++++++
 3 files changed, 19 insertions(+)
 create mode 100644 wiiuse.pc.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b72b925..a6c44c8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -91,6 +91,12 @@ if(NOT SUBPROJECT)
 		set(DOC_DIR .)
 	else()
 		set(DOC_DIR share/doc/wiiuse)
+
+		configure_file(wiiuse.pc.in
+			${CMAKE_CURRENT_BINARY_DIR}/wiiuse.pc
+			@ONLY)
+		install(FILES ${CMAKE_CURRENT_BINARY_DIR}/wiiuse.pc
+			DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 	endif()
 
 	# Documentation
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 7327dfb..84afed0 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -89,6 +89,10 @@ set_property(TARGET wiiuse APPEND PROPERTY
   COMPILE_DEFINITIONS $<$<CONFIG:Debug>:WITH_WIIUSE_DEBUG>
 )
 
+set_target_properties(wiiuse PROPERTIES
+	SOVERSION ${PROJECT_VERSION_MAJOR}
+	VERSION ${PROJECT_VERSION})
+
 install(TARGETS wiiuse
 	RUNTIME DESTINATION bin
 	COMPONENT runtime
diff --git a/wiiuse.pc.in b/wiiuse.pc.in
new file mode 100644
index 0000000..96f57c3
--- /dev/null
+++ b/wiiuse.pc.in
@@ -0,0 +1,9 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=${prefix}
+libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@
+
+Name: WiiUse
+Description: @PROJECT_DESCRIPTION@
+Version: @PROJECT_VERSION@
+Libs: -lwiiuse
