From 02f6240d8cc605f0e86b47b5d67ed99ff7f24139 Mon Sep 17 00:00:00 2001
From: Justin <j.david.berger@gmail.com>
Date: Fri, 18 Sep 2020 14:07:47 -0600
Subject: [PATCH] Fix for alpine build system

---
 redist/symbol_enumerator.c | 9 +++++++--
 redist/symbol_enumerator.h | 6 +-----
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/redist/symbol_enumerator.c b/redist/symbol_enumerator.c
index 518f12d..079a808 100644
--- a/redist/symbol_enumerator.c
+++ b/redist/symbol_enumerator.c
@@ -1,9 +1,9 @@
-#include <stdio.h>
 #include "symbol_enumerator.h"
 
 #if defined( WIN32 ) || defined( WINDOWS ) || defined( USE_WINDOWS ) || defined( _WIN32 )
-
+#include <stdio.h>
 #include <windows.h>
+
 #include <dbghelp.h>
 
 BOOL CALLBACK mycb(PSYMBOL_INFO pSymInfo, ULONG SymbolSize, PVOID UserContext) {
@@ -26,6 +26,7 @@ int EnumerateSymbols( SymEnumeratorCallback cb )
 }
 
 #elif __linux__
+#define _GNU_SOURCE
 
 #include <stdio.h>
 #include <dlfcn.h>
@@ -37,6 +38,10 @@ int EnumerateSymbols( SymEnumeratorCallback cb )
 #define __int128_t long long long
 #endif
 
+#ifndef __WORDSIZE
+#define __WORDSIZE (sizeof(size_t) * 8)
+#endif
+
 #include <link.h>
 #include <elf.h>
 
diff --git a/redist/symbol_enumerator.h b/redist/symbol_enumerator.h
index 87e033b..15af582 100644
--- a/redist/symbol_enumerator.h
+++ b/redist/symbol_enumerator.h
@@ -1,6 +1,4 @@
-#ifndef _SYMBOL_ENUMERATOR_H
-#define _SYMBOL_ENUMERATOR_H
-
+#pragma once
 //Enumerates all symbols in the currently loaded excutable.
 //Don't forget to compile with -rdynamic!
 
@@ -8,5 +6,3 @@
 typedef int (*SymEnumeratorCallback)( const char * path, const char * name, void * location, long size );
 
 int EnumerateSymbols( SymEnumeratorCallback cb );
-
-#endif
